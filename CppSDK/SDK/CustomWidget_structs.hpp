#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CustomWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum CustomWidget.EX6CustomHittestShape
// NumValues: 0x0006
enum class EX6CustomHittestShape : uint8
{
	None                                     = 0,
	Circle                                   = 1,
	Box                                      = 2,
	RoundingBox                              = 3,
	Texture                                  = 4,
	EX6CustomHittestShape_MAX                = 5,
};

// ScriptStruct CustomWidget.X6CustomHittestSlateStyle
// 0x0148 (0x0150 - 0x0008)
struct alignas(0x10) FX6CustomHittestSlateStyle final : public FSlateWidgetStyle
{
public:
	EX6CustomHittestShape                         ShapeType;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CenterOffset;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                SizeOffset;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowHittest;                                      // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HittestPaintColor;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             HittestTexture;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         HittestAlpha;                                      // 0x0050(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAsBox;                                            // 0x0051(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                BoxMargin;                                         // 0x0054(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0xEC];                                      // 0x0064(0x00EC)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FX6CustomHittestSlateStyle) == 0x000010, "Wrong alignment on FX6CustomHittestSlateStyle");
static_assert(sizeof(FX6CustomHittestSlateStyle) == 0x000150, "Wrong size on FX6CustomHittestSlateStyle");
static_assert(offsetof(FX6CustomHittestSlateStyle, ShapeType) == 0x000008, "Member 'FX6CustomHittestSlateStyle::ShapeType' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, CenterOffset) == 0x000010, "Member 'FX6CustomHittestSlateStyle::CenterOffset' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, SizeOffset) == 0x000020, "Member 'FX6CustomHittestSlateStyle::SizeOffset' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, Radius) == 0x000030, "Member 'FX6CustomHittestSlateStyle::Radius' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, bShowHittest) == 0x000034, "Member 'FX6CustomHittestSlateStyle::bShowHittest' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, HittestPaintColor) == 0x000038, "Member 'FX6CustomHittestSlateStyle::HittestPaintColor' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, HittestTexture) == 0x000048, "Member 'FX6CustomHittestSlateStyle::HittestTexture' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, HittestAlpha) == 0x000050, "Member 'FX6CustomHittestSlateStyle::HittestAlpha' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, bAsBox) == 0x000051, "Member 'FX6CustomHittestSlateStyle::bAsBox' has a wrong offset!");
static_assert(offsetof(FX6CustomHittestSlateStyle, BoxMargin) == 0x000054, "Member 'FX6CustomHittestSlateStyle::BoxMargin' has a wrong offset!");

}

