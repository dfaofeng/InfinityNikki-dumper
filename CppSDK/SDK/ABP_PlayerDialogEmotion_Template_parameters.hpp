#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerDialogEmotion_Template

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_AnimGraph");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_AnimGraph) == 0x000020, "Wrong size on ABP_PlayerDialogEmotion_Template_C_AnimGraph");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_AnimGraph, InPose) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_AnimGraph, AnimGraph_0) == 0x000010, "Member 'ABP_PlayerDialogEmotion_Template_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.BP_SnapPose
// 0x0020 (0x0020 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_BP_SnapPose final
{
public:
	class UAnimSequence*                          PauseAnim_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        SnapAbsoluteTime_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlendInTime_0;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlendOutTime_0;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_BP_SnapPose) == 0x000008, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_BP_SnapPose");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_BP_SnapPose) == 0x000020, "Wrong size on ABP_PlayerDialogEmotion_Template_C_BP_SnapPose");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_BP_SnapPose, PauseAnim_0) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_BP_SnapPose::PauseAnim_0' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_BP_SnapPose, SnapAbsoluteTime_0) == 0x000008, "Member 'ABP_PlayerDialogEmotion_Template_C_BP_SnapPose::SnapAbsoluteTime_0' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_BP_SnapPose, BlendInTime_0) == 0x000010, "Member 'ABP_PlayerDialogEmotion_Template_C_BP_SnapPose::BlendInTime_0' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_BP_SnapPose, BlendOutTime_0) == 0x000018, "Member 'ABP_PlayerDialogEmotion_Template_C_BP_SnapPose::BlendOutTime_0' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.CanUseDialogPerformance
// 0x0003 (0x0003 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance final
{
public:
	bool                                          bRet;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance) == 0x000001, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance) == 0x000003, "Wrong size on ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance, bRet) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance::bRet' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'ABP_PlayerDialogEmotion_Template_C_CanUseDialogPerformance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.ExecuteUbergraph_ABP_PlayerDialogEmotion_Template
// 0x0030 (0x0030 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerAnimStatesComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool EnableEmotionPerformance)> K2Node_CreateDelegate_OutputDelegate;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template) == 0x000008, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template) == 0x000030, "Wrong size on ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, EntryPoint) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'ABP_PlayerDialogEmotion_Template_C_ExecuteUbergraph_ABP_PlayerDialogEmotion_Template::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.InitDialogueEmotionParams
// 0x0038 (0x0038 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams final
{
public:
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMainSkeletalComponent_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAssetUserData*                         CallFunc_GetAssetUserDataOfClass_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DialogueEmotionUserData_C*          K2Node_DynamicCast_AsBP_Dialogue_Emotion_User_Data; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams) == 0x000008, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams) == 0x000038, "Wrong size on ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, CallFunc_GetOwningActor_ReturnValue) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, CallFunc_GetMainSkeletalComponent_ReturnValue) == 0x000008, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::CallFunc_GetMainSkeletalComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000018, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, CallFunc_GetAssetUserDataOfClass_ReturnValue) == 0x000020, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::CallFunc_GetAssetUserDataOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, K2Node_DynamicCast_AsBP_Dialogue_Emotion_User_Data) == 0x000028, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::K2Node_DynamicCast_AsBP_Dialogue_Emotion_User_Data' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ABP_PlayerDialogEmotion_Template_C_InitDialogueEmotionParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.OnEmotionPerformanceChanged
// 0x0002 (0x0002 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged final
{
public:
	bool                                          EnableEmotionPerformance;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged) == 0x000001, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged) == 0x000002, "Wrong size on ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged, EnableEmotionPerformance) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged::EnableEmotionPerformance' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ABP_PlayerDialogEmotion_Template_C_OnEmotionPerformanceChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.UpdateState
// 0x0038 (0x0038 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_UpdateState final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActorHasBegunPlay_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMontageSlotActivated_ReturnValue;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetEnableEmotionPerformance_EnableEmotionPerformance; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_UpdateState) == 0x000008, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_UpdateState");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_UpdateState) == 0x000038, "Wrong size on ABP_PlayerDialogEmotion_Template_C_UpdateState");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_CheckActorHasBegunPlay_ReturnValue) == 0x000020, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_CheckActorHasBegunPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_IsMontageSlotActivated_ReturnValue) == 0x000021, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_IsMontageSlotActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateState, CallFunc_BP_GetEnableEmotionPerformance_EnableEmotionPerformance) == 0x000030, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateState::CallFunc_BP_GetEnableEmotionPerformance_EnableEmotionPerformance' has a wrong offset!");

// Function ABP_PlayerDialogEmotion_Template.ABP_PlayerDialogEmotion_Template_C.UpdateUseDialogEmotionBlendBranch
// 0x0038 (0x0038 - 0x0000)
struct ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMontageSlotActivated_ReturnValue;       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMontageSlotActivated_ReturnValue_1;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch) == 0x000008, "Wrong alignment on ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch");
static_assert(sizeof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch) == 0x000038, "Wrong size on ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_GetOwningComponent_ReturnValue) == 0x000000, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_MakeLiteralName_ReturnValue) == 0x00001C, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_IsMontageSlotActivated_ReturnValue) == 0x000024, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_IsMontageSlotActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000028, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_IsMontageSlotActivated_ReturnValue_1) == 0x000030, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_IsMontageSlotActivated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'ABP_PlayerDialogEmotion_Template_C_UpdateUseDialogEmotionBlendBranch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

