#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RecoveryShootDataAsset

#include "Basic.hpp"

#include "F_JumpPlungeMontageSet_structs.hpp"
#include "F_RecoveryShoot_structs.hpp"
#include "F_RecoveryMontageSet_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "F_RecoveryClickBullet_structs.hpp"
#include "F_RecoveryComboMontageSet_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RecoveryShootDataAsset.BP_RecoveryShootDataAsset_C
// 0x0238 (0x0268 - 0x0030)
class UBP_RecoveryShootDataAsset_C final : public UPrimaryDataAsset
{
public:
	TArray<struct FF_RecoveryShoot>               RecoveryShootConfigs;                              // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FF_RecoveryMontageSet>     ChargeStartMontageConfigsBySuit;                   // 0x0040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FF_RecoveryMontageSet>     ChargeEndMontageConfigsBySuit;                     // 0x0090(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  LongDistanceTag;                                   // 0x00E0(0x0020)(Edit, BlueprintVisible, AdvancedDisplay)
	struct FGameplayTagContainer                  TraceTag;                                          // 0x0100(0x0020)(Edit, BlueprintVisible, AdvancedDisplay)
	struct FGameplayTag                           SuccessTag;                                        // 0x0120(0x0008)(Edit, BlueprintVisible, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PenetrateTag;                                      // 0x0128(0x0020)(Edit, BlueprintVisible, AdvancedDisplay)
	struct FGameplayTagContainer                  StickyTag;                                         // 0x0148(0x0020)(Edit, BlueprintVisible, AdvancedDisplay)
	TArray<struct FF_RecoveryClickBullet>         RecoveryClickBulletConfigs;                        // 0x0168(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FF_RecoveryMontageSet>     RecoveryClickMontageConfigsBySuit;                 // 0x0178(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FF_JumpPlungeMontageSet>   JumpPlungeStartMontageConfigsBySuit;               // 0x01C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FF_RecoveryComboMontageSet> RecoveryComboMontageConfigsBySuit;                // 0x0218(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RecoveryShootDataAsset_C">();
	}
	static class UBP_RecoveryShootDataAsset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RecoveryShootDataAsset_C>();
	}
};
static_assert(alignof(UBP_RecoveryShootDataAsset_C) == 0x000008, "Wrong alignment on UBP_RecoveryShootDataAsset_C");
static_assert(sizeof(UBP_RecoveryShootDataAsset_C) == 0x000268, "Wrong size on UBP_RecoveryShootDataAsset_C");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, RecoveryShootConfigs) == 0x000030, "Member 'UBP_RecoveryShootDataAsset_C::RecoveryShootConfigs' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, ChargeStartMontageConfigsBySuit) == 0x000040, "Member 'UBP_RecoveryShootDataAsset_C::ChargeStartMontageConfigsBySuit' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, ChargeEndMontageConfigsBySuit) == 0x000090, "Member 'UBP_RecoveryShootDataAsset_C::ChargeEndMontageConfigsBySuit' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, LongDistanceTag) == 0x0000E0, "Member 'UBP_RecoveryShootDataAsset_C::LongDistanceTag' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, TraceTag) == 0x000100, "Member 'UBP_RecoveryShootDataAsset_C::TraceTag' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, SuccessTag) == 0x000120, "Member 'UBP_RecoveryShootDataAsset_C::SuccessTag' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, PenetrateTag) == 0x000128, "Member 'UBP_RecoveryShootDataAsset_C::PenetrateTag' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, StickyTag) == 0x000148, "Member 'UBP_RecoveryShootDataAsset_C::StickyTag' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, RecoveryClickBulletConfigs) == 0x000168, "Member 'UBP_RecoveryShootDataAsset_C::RecoveryClickBulletConfigs' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, RecoveryClickMontageConfigsBySuit) == 0x000178, "Member 'UBP_RecoveryShootDataAsset_C::RecoveryClickMontageConfigsBySuit' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, JumpPlungeStartMontageConfigsBySuit) == 0x0001C8, "Member 'UBP_RecoveryShootDataAsset_C::JumpPlungeStartMontageConfigsBySuit' has a wrong offset!");
static_assert(offsetof(UBP_RecoveryShootDataAsset_C, RecoveryComboMontageConfigsBySuit) == 0x000218, "Member 'UBP_RecoveryShootDataAsset_C::RecoveryComboMontageConfigsBySuit' has a wrong offset!");

}

