#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LifeSpan

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LifeSpan.BP_LifeSpan_C
// 0x0130 (0x0160 - 0x0030)
class UBP_LifeSpan_C final : public UPrimaryDataAsset
{
public:
	double                                        BP_DeathPanelShowDelayTime;                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_DeathPanelFadeTime;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_DeathPanelShowClickDelayTime;                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_HideMainHudDelayTime;                           // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_ShowMainHudDelayTime;                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_QuickDeathHideMainHudDelayTime;                 // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_QuickDeathFadeOutDelayTime;                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BP_QuickDeathFadeOutTime;                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           BP_QuickDeathAnimMontage;                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           BP_QuickReliveAnimMontage;                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          QuickDeathEffect;                                  // 0x0080(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 QuickDeathEffectSocket;                            // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UCurveFloat*                            QuickDeathCurve;                                   // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            QuickDeathEmissiveCurve;                           // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            QuickDeathDisappearCurve;                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          QuickReliveEffect;                                 // 0x00D0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 QuickReliveEffectSocket;                           // 0x00F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UCurveFloat*                            QuickReliveCurve;                                  // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            QuickReliveEmissiveCurve;                          // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            QuickReliveDisappearCurve;                         // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveEdgeSoftness;                              // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveEdgeWidth;                                 // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveNoiseIntensity;                            // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveNoiseSize;                                 // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisEmiCol1;                                        // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           BP_OnBikeQuickDeathAM;                             // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           BP_OnBikeQuickReliveAM;                            // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LifeSpan_C">();
	}
	static class UBP_LifeSpan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LifeSpan_C>();
	}
};
static_assert(alignof(UBP_LifeSpan_C) == 0x000008, "Wrong alignment on UBP_LifeSpan_C");
static_assert(sizeof(UBP_LifeSpan_C) == 0x000160, "Wrong size on UBP_LifeSpan_C");
static_assert(offsetof(UBP_LifeSpan_C, BP_DeathPanelShowDelayTime) == 0x000030, "Member 'UBP_LifeSpan_C::BP_DeathPanelShowDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_DeathPanelFadeTime) == 0x000038, "Member 'UBP_LifeSpan_C::BP_DeathPanelFadeTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_DeathPanelShowClickDelayTime) == 0x000040, "Member 'UBP_LifeSpan_C::BP_DeathPanelShowClickDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_HideMainHudDelayTime) == 0x000048, "Member 'UBP_LifeSpan_C::BP_HideMainHudDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_ShowMainHudDelayTime) == 0x000050, "Member 'UBP_LifeSpan_C::BP_ShowMainHudDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_QuickDeathHideMainHudDelayTime) == 0x000058, "Member 'UBP_LifeSpan_C::BP_QuickDeathHideMainHudDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_QuickDeathFadeOutDelayTime) == 0x000060, "Member 'UBP_LifeSpan_C::BP_QuickDeathFadeOutDelayTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_QuickDeathFadeOutTime) == 0x000068, "Member 'UBP_LifeSpan_C::BP_QuickDeathFadeOutTime' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_QuickDeathAnimMontage) == 0x000070, "Member 'UBP_LifeSpan_C::BP_QuickDeathAnimMontage' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_QuickReliveAnimMontage) == 0x000078, "Member 'UBP_LifeSpan_C::BP_QuickReliveAnimMontage' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickDeathEffect) == 0x000080, "Member 'UBP_LifeSpan_C::QuickDeathEffect' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickDeathEffectSocket) == 0x0000A8, "Member 'UBP_LifeSpan_C::QuickDeathEffectSocket' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickDeathCurve) == 0x0000B8, "Member 'UBP_LifeSpan_C::QuickDeathCurve' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickDeathEmissiveCurve) == 0x0000C0, "Member 'UBP_LifeSpan_C::QuickDeathEmissiveCurve' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickDeathDisappearCurve) == 0x0000C8, "Member 'UBP_LifeSpan_C::QuickDeathDisappearCurve' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickReliveEffect) == 0x0000D0, "Member 'UBP_LifeSpan_C::QuickReliveEffect' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickReliveEffectSocket) == 0x0000F8, "Member 'UBP_LifeSpan_C::QuickReliveEffectSocket' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickReliveCurve) == 0x000108, "Member 'UBP_LifeSpan_C::QuickReliveCurve' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickReliveEmissiveCurve) == 0x000110, "Member 'UBP_LifeSpan_C::QuickReliveEmissiveCurve' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, QuickReliveDisappearCurve) == 0x000118, "Member 'UBP_LifeSpan_C::QuickReliveDisappearCurve' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, DissolveEdgeSoftness) == 0x000120, "Member 'UBP_LifeSpan_C::DissolveEdgeSoftness' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, DissolveEdgeWidth) == 0x000128, "Member 'UBP_LifeSpan_C::DissolveEdgeWidth' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, DissolveNoiseIntensity) == 0x000130, "Member 'UBP_LifeSpan_C::DissolveNoiseIntensity' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, DissolveNoiseSize) == 0x000138, "Member 'UBP_LifeSpan_C::DissolveNoiseSize' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, DisEmiCol1) == 0x000140, "Member 'UBP_LifeSpan_C::DisEmiCol1' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_OnBikeQuickDeathAM) == 0x000150, "Member 'UBP_LifeSpan_C::BP_OnBikeQuickDeathAM' has a wrong offset!");
static_assert(offsetof(UBP_LifeSpan_C, BP_OnBikeQuickReliveAM) == 0x000158, "Member 'UBP_LifeSpan_C::BP_OnBikeQuickReliveAM' has a wrong offset!");

}

