#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PushDoor_ControlRig

#include "Basic.hpp"

#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass PushDoor_ControlRig.PushDoor_ControlRig_C
// 0x0170 (0x0C18 - 0x0AA8)
class UPushDoor_ControlRig_C final : public UControlRig
{
public:
	struct FVector                                HandLeftCurrentLocation;                           // 0x0AA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandRightCurrentLocation;                          // 0x0AC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandLeftTargetLocation;                            // 0x0AD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandRightTargetLocation;                           // 0x0AF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandLeftLocationOffset;                            // 0x0B08(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandRightLocationOffset;                           // 0x0B20(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ElbowLeftCurrentLocation;                          // 0x0B38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ElbowRightCurrentLocation;                         // 0x0B50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Spine1MCurrentLocation;                            // 0x0B68(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RootMCurrentLocation;                              // 0x0B80(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceLength;                                       // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableDebug;                                      // 0x0BA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA1[0x7];                                      // 0x0BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NeckLocation;                                      // 0x0BA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFirstTrace_Wrist_L;                               // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFirstTrace_Wrist_R;                               // 0x0BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC2[0x6];                                      // 0x0BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HandCapsuleRadiusOffset;                           // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HandCapsuleHeightOffset;                           // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandLeftCurrentLocationOffset;                     // 0x0BD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandRightCurrentLocationOffset;                    // 0x0BF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Curve_WristL_Alpha;                                // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Curve_WristR_Alpha;                                // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PushDoor_ControlRig_C">();
	}
	static class UPushDoor_ControlRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPushDoor_ControlRig_C>();
	}
};
static_assert(alignof(UPushDoor_ControlRig_C) == 0x000008, "Wrong alignment on UPushDoor_ControlRig_C");
static_assert(sizeof(UPushDoor_ControlRig_C) == 0x000C18, "Wrong size on UPushDoor_ControlRig_C");
static_assert(offsetof(UPushDoor_ControlRig_C, HandLeftCurrentLocation) == 0x000AA8, "Member 'UPushDoor_ControlRig_C::HandLeftCurrentLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandRightCurrentLocation) == 0x000AC0, "Member 'UPushDoor_ControlRig_C::HandRightCurrentLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandLeftTargetLocation) == 0x000AD8, "Member 'UPushDoor_ControlRig_C::HandLeftTargetLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandRightTargetLocation) == 0x000AF0, "Member 'UPushDoor_ControlRig_C::HandRightTargetLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandLeftLocationOffset) == 0x000B08, "Member 'UPushDoor_ControlRig_C::HandLeftLocationOffset' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandRightLocationOffset) == 0x000B20, "Member 'UPushDoor_ControlRig_C::HandRightLocationOffset' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, ElbowLeftCurrentLocation) == 0x000B38, "Member 'UPushDoor_ControlRig_C::ElbowLeftCurrentLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, ElbowRightCurrentLocation) == 0x000B50, "Member 'UPushDoor_ControlRig_C::ElbowRightCurrentLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, Spine1MCurrentLocation) == 0x000B68, "Member 'UPushDoor_ControlRig_C::Spine1MCurrentLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, RootMCurrentLocation) == 0x000B80, "Member 'UPushDoor_ControlRig_C::RootMCurrentLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, TraceLength) == 0x000B98, "Member 'UPushDoor_ControlRig_C::TraceLength' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, bEnableDebug) == 0x000BA0, "Member 'UPushDoor_ControlRig_C::bEnableDebug' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, NeckLocation) == 0x000BA8, "Member 'UPushDoor_ControlRig_C::NeckLocation' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, bFirstTrace_Wrist_L) == 0x000BC0, "Member 'UPushDoor_ControlRig_C::bFirstTrace_Wrist_L' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, bFirstTrace_Wrist_R) == 0x000BC1, "Member 'UPushDoor_ControlRig_C::bFirstTrace_Wrist_R' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandCapsuleRadiusOffset) == 0x000BC8, "Member 'UPushDoor_ControlRig_C::HandCapsuleRadiusOffset' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandCapsuleHeightOffset) == 0x000BD0, "Member 'UPushDoor_ControlRig_C::HandCapsuleHeightOffset' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandLeftCurrentLocationOffset) == 0x000BD8, "Member 'UPushDoor_ControlRig_C::HandLeftCurrentLocationOffset' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, HandRightCurrentLocationOffset) == 0x000BF0, "Member 'UPushDoor_ControlRig_C::HandRightCurrentLocationOffset' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, Curve_WristL_Alpha) == 0x000C08, "Member 'UPushDoor_ControlRig_C::Curve_WristL_Alpha' has a wrong offset!");
static_assert(offsetof(UPushDoor_ControlRig_C, Curve_WristR_Alpha) == 0x000C10, "Member 'UPushDoor_ControlRig_C::Curve_WristR_Alpha' has a wrong offset!");

}

