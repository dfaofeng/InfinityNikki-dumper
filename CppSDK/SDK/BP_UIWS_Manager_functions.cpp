#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIWS_Manager

#include "Basic.hpp"

#include "BP_UIWS_Manager_classes.hpp"
#include "BP_UIWS_Manager_parameters.hpp"


namespace SDK
{

// Function BP_UIWS_Manager.BP_UIWS_Manager_C.AdvectionSim
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::AdvectionSim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "AdvectionSim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.ApplyInteractivityForces
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::ApplyInteractivityForces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "ApplyInteractivityForces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.ComputeNormal
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::ComputeNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "ComputeNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.CopyNormal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::CopyNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "CopyNormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.CulcDrawPos
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  size_multiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D*                       OutSize                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 PosX                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 PosY                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    SamplePos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::CulcDrawPos(const struct FVector& Velocity, const struct FVector& Position, const struct FVector2D& Size, double size_multiplier, struct FVector2D* OutSize, double* PosX, double* PosY, struct FLinearColor* SamplePos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "CulcDrawPos");

	Params::BP_UIWS_Manager_C_CulcDrawPos Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.Position = std::move(Position);
	Parms.Size = std::move(Size);
	Parms.size_multiplier = size_multiplier;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSize != nullptr)
		*OutSize = std::move(Parms.OutSize);

	if (PosX != nullptr)
		*PosX = Parms.PosX;

	if (PosY != nullptr)
		*PosY = Parms.PosY;

	if (SamplePos != nullptr)
		*SamplePos = std::move(Parms.SamplePos);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.CulcForceIntensity
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  HeightOffset                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Multiplier                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OcclutionDetection                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::CulcForceIntensity(double HeightOffset, const struct FVector& Position, double Multiplier, bool OcclutionDetection, double* Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "CulcForceIntensity");

	Params::BP_UIWS_Manager_C_CulcForceIntensity Parms{};

	Parms.HeightOffset = HeightOffset;
	Parms.Position = std::move(Position);
	Parms.Multiplier = Multiplier;
	Parms.OcclutionDetection = OcclutionDetection;

	UObject::ProcessEvent(Func, &Parms);

	if (Intensity != nullptr)
		*Intensity = Parms.Intensity;
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.DrawForce
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  size_multiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstanceDynamic*         MatInst                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::DrawForce(const struct FVector& Velocity, const struct FVector& Position, const struct FVector2D& Size, double size_multiplier, class UCanvas* Canvas, class UMaterialInstanceDynamic* MatInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "DrawForce");

	Params::BP_UIWS_Manager_C_DrawForce Parms{};

	Parms.Velocity = std::move(Velocity);
	Parms.Position = std::move(Position);
	Parms.Size = std::move(Size);
	Parms.size_multiplier = size_multiplier;
	Parms.Canvas = Canvas;
	Parms.MatInst = MatInst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.ExecuteUbergraph_BP_UIWS_Manager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::ExecuteUbergraph_BP_UIWS_Manager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "ExecuteUbergraph_BP_UIWS_Manager");

	Params::BP_UIWS_Manager_C_ExecuteUbergraph_BP_UIWS_Manager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.GetPlayerPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         PlayerPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::GetPlayerPos(struct FVector* PlayerPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "GetPlayerPos");

	Params::BP_UIWS_Manager_C_GetPlayerPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerPos != nullptr)
		*PlayerPos = std::move(Parms.PlayerPos);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.GetPlayerPos_LastFrame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         PlayerPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::GetPlayerPos_LastFrame(struct FVector* PlayerPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "GetPlayerPos_LastFrame");

	Params::BP_UIWS_Manager_C_GetPlayerPos_LastFrame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerPos != nullptr)
		*PlayerPos = std::move(Parms.PlayerPos);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.InitMat
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::InitMat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "InitMat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.InitRT
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::InitRT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "InitRT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.InPlayerRange
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FVector&                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_UIWS_Manager_C::InPlayerRange(const struct FVector& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "InPlayerRange");

	Params::BP_UIWS_Manager_C_InPlayerRange Parms{};

	Parms.B = std::move(B);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.InteractCapture
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::InteractCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "InteractCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.PropagateRipples
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_UIWS_Manager_C::PropagateRipples()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "PropagateRipples");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_UIWS_Manager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "ReceiveTick");

	Params::BP_UIWS_Manager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.Register Interactor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::Register_Interactor(class UActorComponent* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "Register Interactor");

	Params::BP_UIWS_Manager_C_Register_Interactor Parms{};

	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.RemoveFromShowOnlyList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::RemoveFromShowOnlyList(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "RemoveFromShowOnlyList");

	Params::BP_UIWS_Manager_C_RemoveFromShowOnlyList Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.SetInteractivity
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::SetInteractivity(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "SetInteractivity");

	Params::BP_UIWS_Manager_C_SetInteractivity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.Unregister Interactor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::Unregister_Interactor(class UActorComponent* Interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "Unregister Interactor");

	Params::BP_UIWS_Manager_C_Unregister_Interactor Parms{};

	Parms.Interactor = Interactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.UpdatePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   InteractorPos                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   ActiveOut                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::UpdatePos(const struct FVector& InteractorPos, bool* ActiveOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "UpdatePos");

	Params::BP_UIWS_Manager_C_UpdatePos Parms{};

	Parms.InteractorPos = std::move(InteractorPos);

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveOut != nullptr)
		*ActiveOut = Parms.ActiveOut;
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.Use High Quality Render Target
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::Use_High_Quality_Render_Target(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "Use High Quality Render Target");

	Params::BP_UIWS_Manager_C_Use_High_Quality_Render_Target Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.Use2ChannelHeightMap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::Use2ChannelHeightMap(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "Use2ChannelHeightMap");

	Params::BP_UIWS_Manager_C_Use2ChannelHeightMap Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIWS_Manager.BP_UIWS_Manager_C.WaterInteractEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIWS_Manager_C::WaterInteractEnabled(bool* IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIWS_Manager_C", "WaterInteractEnabled");

	Params::BP_UIWS_Manager_C_WaterInteractEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}

}

