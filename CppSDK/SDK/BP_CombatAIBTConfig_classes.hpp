#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombatAIBTConfig

#include "Basic.hpp"

#include "EPositionServicePolicyName_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CombatAIBTConfig.BP_CombatAIBTConfig_C
// 0x0030 (0x0060 - 0x0030)
class UBP_CombatAIBTConfig_C final : public UPrimaryDataAsset
{
public:
	double                                        CancelRequestAttackOutterDis;                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RequestAttackDis;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPositionServicePolicyName                    WanderPositionService;                             // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxJumpDistance;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpHeight;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WanderSectorPointsNum;                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CombatAIBTConfig_C">();
	}
	static class UBP_CombatAIBTConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CombatAIBTConfig_C>();
	}
};
static_assert(alignof(UBP_CombatAIBTConfig_C) == 0x000008, "Wrong alignment on UBP_CombatAIBTConfig_C");
static_assert(sizeof(UBP_CombatAIBTConfig_C) == 0x000060, "Wrong size on UBP_CombatAIBTConfig_C");
static_assert(offsetof(UBP_CombatAIBTConfig_C, CancelRequestAttackOutterDis) == 0x000030, "Member 'UBP_CombatAIBTConfig_C::CancelRequestAttackOutterDis' has a wrong offset!");
static_assert(offsetof(UBP_CombatAIBTConfig_C, RequestAttackDis) == 0x000038, "Member 'UBP_CombatAIBTConfig_C::RequestAttackDis' has a wrong offset!");
static_assert(offsetof(UBP_CombatAIBTConfig_C, WanderPositionService) == 0x000040, "Member 'UBP_CombatAIBTConfig_C::WanderPositionService' has a wrong offset!");
static_assert(offsetof(UBP_CombatAIBTConfig_C, MaxJumpDistance) == 0x000048, "Member 'UBP_CombatAIBTConfig_C::MaxJumpDistance' has a wrong offset!");
static_assert(offsetof(UBP_CombatAIBTConfig_C, JumpHeight) == 0x000050, "Member 'UBP_CombatAIBTConfig_C::JumpHeight' has a wrong offset!");
static_assert(offsetof(UBP_CombatAIBTConfig_C, WanderSectorPointsNum) == 0x000058, "Member 'UBP_CombatAIBTConfig_C::WanderSectorPointsNum' has a wrong offset!");

}

