#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StreamlineReflexBlueprint

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "StreamlineReflexBlueprint_structs.hpp"
#include "StreamlineBlueprint_structs.hpp"


namespace SDK
{

// Class StreamlineReflexBlueprint.StreamlineLibraryReflex
// 0x0000 (0x0028 - 0x0028)
class UStreamlineLibraryReflex final : public UBlueprintFunctionLibrary
{
public:
	static EStreamlineReflexMode GetDefaultReflexMode();
	static float GetGameLatencyInMs();
	static float GetGameToRenderLatencyInMs();
	static EStreamlineReflexMode GetReflexMode();
	static float GetRenderLatencyInMs();
	static TArray<EStreamlineReflexMode> GetSupportedReflexModes();
	static bool IsReflexModeSupported(EStreamlineReflexMode ReflexMode);
	static bool IsReflexSupported();
	static EStreamlineFeatureSupport QueryReflexSupport();
	static void SetReflexMode(const EStreamlineReflexMode Mode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StreamlineLibraryReflex">();
	}
	static class UStreamlineLibraryReflex* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStreamlineLibraryReflex>();
	}
};
static_assert(alignof(UStreamlineLibraryReflex) == 0x000008, "Wrong alignment on UStreamlineLibraryReflex");
static_assert(sizeof(UStreamlineLibraryReflex) == 0x000028, "Wrong size on UStreamlineLibraryReflex");

}

