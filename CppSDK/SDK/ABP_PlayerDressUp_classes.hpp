#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerDressUp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_PlayerDressUp_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "X6Animation_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PlayerDressUp.ABP_PlayerDressUp_C
// 0x0890 (0x0C60 - 0x03D0)
class UABP_PlayerDressUp_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PlayerDressUp::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;            // 0x03D8(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03E8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03F0(0x0008)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x03F8(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0440(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0488(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x04D0(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0518(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0538(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x0580(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0648(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0690(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0758(0x0048)()
	struct FAnimNode_X6OverlayBlend               AnimGraphNode_X6OverlayBlend;                      // 0x07A0(0x0258)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x09F8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0A40(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0AC0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0AE8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0B10(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0B58(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0BD8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0C00(0x0048)()
	class UX6OverlayData*                         HandHoldOverlayData;                               // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableHandHoldOverlay;                             // 0x0C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPlayBicycleAnim;                                // 0x0C51(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C52[0x2];                                      // 0x0C52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         VehicleCategoryEnumType;                           // 0x0C54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ABP_PlayerDressUp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PlayerDressUp_C">();
	}
	static class UABP_PlayerDressUp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PlayerDressUp_C>();
	}
};
static_assert(alignof(UABP_PlayerDressUp_C) == 0x000010, "Wrong alignment on UABP_PlayerDressUp_C");
static_assert(sizeof(UABP_PlayerDressUp_C) == 0x000C60, "Wrong size on UABP_PlayerDressUp_C");
static_assert(offsetof(UABP_PlayerDressUp_C, UberGraphFrame) == 0x0003D0, "Member 'UABP_PlayerDressUp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, __AnimBlueprintMutables) == 0x0003D8, "Member 'UABP_PlayerDressUp_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimBlueprintExtension_PropertyAccess) == 0x0003E8, "Member 'UABP_PlayerDressUp_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimBlueprintExtension_Base) == 0x0003F0, "Member 'UABP_PlayerDressUp_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_SequencePlayer_2) == 0x0003F8, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_BlendListByInt) == 0x000440, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_SequencePlayer_1) == 0x000488, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_Slot_3) == 0x0004D0, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_Root) == 0x000518, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_Slot_2) == 0x000538, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_ApplyAdditive_1) == 0x000580, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_Slot_1) == 0x000648, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_ApplyAdditive) == 0x000690, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_Slot) == 0x000758, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_X6OverlayBlend) == 0x0007A0, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_X6OverlayBlend' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_BlendListByBool_1) == 0x0009F8, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_SaveCachedPose_1) == 0x000A40, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_UseCachedPose_2) == 0x000AC0, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_UseCachedPose_1) == 0x000AE8, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_SequencePlayer) == 0x000B10, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_SaveCachedPose) == 0x000B58, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_UseCachedPose) == 0x000BD8, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, AnimGraphNode_BlendListByBool) == 0x000C00, "Member 'UABP_PlayerDressUp_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, HandHoldOverlayData) == 0x000C48, "Member 'UABP_PlayerDressUp_C::HandHoldOverlayData' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, EnableHandHoldOverlay) == 0x000C50, "Member 'UABP_PlayerDressUp_C::EnableHandHoldOverlay' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, CanPlayBicycleAnim) == 0x000C51, "Member 'UABP_PlayerDressUp_C::CanPlayBicycleAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerDressUp_C, VehicleCategoryEnumType) == 0x000C54, "Member 'UABP_PlayerDressUp_C::VehicleCategoryEnumType' has a wrong offset!");

}

