#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANS_InputInhibited

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ANS_InputInhibited.ANS_InputInhibited_C
// 0x0008 (0x0038 - 0x0030)
class UANS_InputInhibited_C final : public UAnimNotifyState
{
public:
	bool                                          BP_InhibitMoveInput;                               // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_AlsoInhibitJumpInput;                           // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;
	class FString GetNotifyName() const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration, const struct FAnimNotifyEventReference& EventReference) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;
	bool Received_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime, const struct FAnimNotifyEventReference& EventReference) const;
	void Received_NotifyTick_Section(class FName SectionName, class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANS_InputInhibited_C">();
	}
	static class UANS_InputInhibited_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANS_InputInhibited_C>();
	}
};
static_assert(alignof(UANS_InputInhibited_C) == 0x000008, "Wrong alignment on UANS_InputInhibited_C");
static_assert(sizeof(UANS_InputInhibited_C) == 0x000038, "Wrong size on UANS_InputInhibited_C");
static_assert(offsetof(UANS_InputInhibited_C, BP_InhibitMoveInput) == 0x000030, "Member 'UANS_InputInhibited_C::BP_InhibitMoveInput' has a wrong offset!");
static_assert(offsetof(UANS_InputInhibited_C, BP_AlsoInhibitJumpInput) == 0x000031, "Member 'UANS_InputInhibited_C::BP_AlsoInhibitJumpInput' has a wrong offset!");

}

