#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PlayerCombatMovement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimationWarpingRuntime_structs.hpp"
#include "X6Animation_structs.hpp"
#include "ABP_PlayerCombatMovement_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "X6Game_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PlayerCombatMovement.ABP_PlayerCombatMovement_C
// 0x1470 (0x1A70 - 0x0600)
class UABP_PlayerCombatMovement_C final : public UX6NikkiGroundAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PlayerCombatMovement::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;     // 0x0608(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0618(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0620(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_16;                             // 0x0628(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x0648(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_15;                             // 0x0700(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0720(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0748(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0770(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0798(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x07C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x07E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0810(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0838(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0888(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x08B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x08F8(0x0020)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x0918(0x00F0)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x0A08(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0AF8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0B18(0x0020)()
	struct FAnimNode_StrideWarping                AnimGraphNode_StrideWarping;                       // 0x0B38(0x0248)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0D80(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0DC8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0DE8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0E30(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0E50(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0F18(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0F38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0F60(0x0028)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_1;                            // 0x0F88(0x0048)()
	struct FAnimNode_X6SequencePlayer             AnimGraphNode_X6SequencePlayer_1;                  // 0x0FD0(0x0108)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x10D8(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror;                              // 0x10F8(0x0048)()
	struct FAnimNode_X6SequencePlayer             AnimGraphNode_X6SequencePlayer;                    // 0x1140(0x0108)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1248(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1268(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1290(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1358(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1378(0x0028)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x13A0(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_14;                             // 0x1468(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_13;                             // 0x1488(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_12;                             // 0x14A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x14C8(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_11;                             // 0x1580(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x15A0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_10;                             // 0x1658(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x1678(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_9;                              // 0x1730(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_8;                              // 0x1750(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x1770(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x1790(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x17B0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x17D0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x17F0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x1810(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x1830(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x18E8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1908(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x19C0(0x0020)()
	struct FVector                                K2Node_PropertyAccess_2;                           // 0x19E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_1;                           // 0x19F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess;                             // 0x19F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19FA[0x6];                                     // 0x19FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerMoveableComponent_C*          BP_PlayerMoveableComp;                             // 0x1A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        BP_FallHighSpeedValue;                             // 0x1A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsLandStatic;                                   // 0x1A10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_JumpIsRightFoot;                                // 0x1A11(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A12[0x6];                                     // 0x1A12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          BP_StaticLandingAnim;                              // 0x1A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          BP_JogLandingAnim;                                 // 0x1A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BP_IsLandingHeavy;                                 // 0x1A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstUpdate;                                     // 0x1A29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2A[0x6];                                     // 0x1A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DisplacementSpeed;                                 // 0x1A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x1A38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnabledMovement;                                  // 0x1A50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A51[0x7];                                     // 0x1A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerCombatMovementComponent_C*    BP_PlayerCombatMovementComp;                       // 0x1A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERegularFloatingJumpStage                     BP_PrevJumpStage;                                  // 0x1A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A61[0x7];                                     // 0x1A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerRegularInAirMovementComp_C*   BP_RegularInAIrMovementComp;                       // 0x1A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimLayer_AimOffset(const struct FPoseLink& InPoseForAimOffset, struct FPoseLink* AnimLayer_AimOffset_0);
	void AnimLayer_BehaviorAdditiveMode(const struct FPoseLink& InPoseForPlayerBehavior, struct FPoseLink* AnimLayer_BehaviorAdditiveMode_0);
	void AnimLayer_CombatMovement(struct FPoseLink* AnimLayer_CombatMovement_0);
	void AnimLayer_EquipmentAdditiveMode(const struct FPoseLink& InPoseForEquipment, struct FPoseLink* AnimLayer_EquipmentAdditiveMode_0);
	void AnimLayer_Jump(struct FPoseLink* AnimLayer_Jump_0);
	void AnimLayer_Land(struct FPoseLink* AnimLayer_Land_0);
	void AnimLayer_MovementDependObject(struct FPoseLink* AnimLayer_MovementDependObject_0);
	void AnimLayer_NPCAdditiveBehavior(const struct FPoseLink& InPose, struct FPoseLink* AnimLayer_NPCAdditiveBehavior_0);
	void AnimLayer_NPCBehavior(const struct FPoseLink& InPose_0, struct FPoseLink* AnimLayer_NPCBehavior_0);
	void AnimLayer_PlayerControllingTool(struct FPoseLink* AnimLayer_PlayerControllingTool_0);
	void AnimLayer_PlayerRegularMovement(struct FPoseLink* AnimLayer_PlayerRegularMovement_0);
	void AnimLayer_SpecialSurfaceMovement(struct FPoseLink* AnimLayer_SpecialSurfaceMovement_0);
	void AnimLayer_StrafeMovement(struct FPoseLink* AnimLayer_StrafeMovement_0);
	void AnimLayer_UsingCarrierMovement(struct FPoseLink* AnimLayer_UsingCarrierMovement_0);
	void AnimLayer_WhiteBoxMovement(struct FPoseLink* AnimLayer_WhiteBoxMovement_0);
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void DetermineLandingAnimSequence();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerCombatMovement_AnimGraphNode_TransitionResult_051D2A874BE18A9737B8EA823B83C966();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerCombatMovement_AnimGraphNode_TransitionResult_1C21C3254DF95714A397D5BEDC15B205();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerCombatMovement_AnimGraphNode_TransitionResult_E80F224C49851EC1BC94769212AE64E8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PlayerCombatMovement_AnimGraphNode_TransitionResult_F83A0DF34B8B47E6A4A488882C50E623();
	void Event_OnPlayerFloatingJumpStageChanged_Event(ERegularFloatingJumpStage NewStage, ERegularFloatingJumpStage OldStage);
	void ExecuteUbergraph_ABP_PlayerCombatMovement(int32 EntryPoint);
	void On_Movement_Mode_Changed(EMovementMode Mode, EMovementMode PreMode);
	void UpdateCycleAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateLocationData(double InDeltaTime);
	void UpdateMovementData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PlayerCombatMovement_C">();
	}
	static class UABP_PlayerCombatMovement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PlayerCombatMovement_C>();
	}
};
static_assert(alignof(UABP_PlayerCombatMovement_C) == 0x000010, "Wrong alignment on UABP_PlayerCombatMovement_C");
static_assert(sizeof(UABP_PlayerCombatMovement_C) == 0x001A70, "Wrong size on UABP_PlayerCombatMovement_C");
static_assert(offsetof(UABP_PlayerCombatMovement_C, UberGraphFrame) == 0x000600, "Member 'UABP_PlayerCombatMovement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, __AnimBlueprintMutables) == 0x000608, "Member 'UABP_PlayerCombatMovement_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimBlueprintExtension_PropertyAccess) == 0x000618, "Member 'UABP_PlayerCombatMovement_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimBlueprintExtension_Base) == 0x000620, "Member 'UABP_PlayerCombatMovement_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_16) == 0x000628, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_16' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LinkedInputPose_5) == 0x000648, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_15) == 0x000700, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_15' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_13) == 0x000720, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_12) == 0x000748, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_11) == 0x000770, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_10) == 0x000798, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_9) == 0x0007C0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_8) == 0x0007E8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_7) == 0x000810, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_6) == 0x000838, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_5) == 0x000860, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_4) == 0x000888, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_SequencePlayer_2) == 0x0008B0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult_6) == 0x0008F8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_CopyBone_1) == 0x000918, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_CopyBone) == 0x000A08, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LocalToComponentSpace) == 0x000AF8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_ComponentToLocalSpace) == 0x000B18, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StrideWarping) == 0x000B38, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StrideWarping' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_SequencePlayer_1) == 0x000D80, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult_5) == 0x000DC8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_SequencePlayer) == 0x000DE8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult_4) == 0x000E30, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateMachine_2) == 0x000E50, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult_3) == 0x000F18, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_3) == 0x000F38, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_2) == 0x000F60, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Mirror_1) == 0x000F88, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Mirror_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_X6SequencePlayer_1) == 0x000FD0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_X6SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult_2) == 0x0010D8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Mirror) == 0x0010F8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Mirror' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_X6SequencePlayer) == 0x001140, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_X6SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult_1) == 0x001248, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult_1) == 0x001268, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateMachine_1) == 0x001290, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateResult) == 0x001358, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_TransitionResult) == 0x001378, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_StateMachine) == 0x0013A0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_14) == 0x001468, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_14' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_13) == 0x001488, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_13' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_12) == 0x0014A8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_12' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LinkedInputPose_4) == 0x0014C8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_11) == 0x001580, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_11' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LinkedInputPose_3) == 0x0015A0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_10) == 0x001658, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_10' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LinkedInputPose_2) == 0x001678, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_9) == 0x001730, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_9' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_8) == 0x001750, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_8' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_7) == 0x001770, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_6) == 0x001790, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_5) == 0x0017B0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_4) == 0x0017D0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_3) == 0x0017F0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_2) == 0x001810, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LinkedInputPose_1) == 0x001830, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root_1) == 0x0018E8, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_LinkedInputPose) == 0x001908, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, AnimGraphNode_Root) == 0x0019C0, "Member 'UABP_PlayerCombatMovement_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, K2Node_PropertyAccess_2) == 0x0019E0, "Member 'UABP_PlayerCombatMovement_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, K2Node_PropertyAccess_1) == 0x0019F8, "Member 'UABP_PlayerCombatMovement_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, K2Node_PropertyAccess) == 0x0019F9, "Member 'UABP_PlayerCombatMovement_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_PlayerMoveableComp) == 0x001A00, "Member 'UABP_PlayerCombatMovement_C::BP_PlayerMoveableComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_FallHighSpeedValue) == 0x001A08, "Member 'UABP_PlayerCombatMovement_C::BP_FallHighSpeedValue' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_IsLandStatic) == 0x001A10, "Member 'UABP_PlayerCombatMovement_C::BP_IsLandStatic' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_JumpIsRightFoot) == 0x001A11, "Member 'UABP_PlayerCombatMovement_C::BP_JumpIsRightFoot' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_StaticLandingAnim) == 0x001A18, "Member 'UABP_PlayerCombatMovement_C::BP_StaticLandingAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_JogLandingAnim) == 0x001A20, "Member 'UABP_PlayerCombatMovement_C::BP_JogLandingAnim' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_IsLandingHeavy) == 0x001A28, "Member 'UABP_PlayerCombatMovement_C::BP_IsLandingHeavy' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, IsFirstUpdate) == 0x001A29, "Member 'UABP_PlayerCombatMovement_C::IsFirstUpdate' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, DisplacementSpeed) == 0x001A30, "Member 'UABP_PlayerCombatMovement_C::DisplacementSpeed' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, WorldLocation) == 0x001A38, "Member 'UABP_PlayerCombatMovement_C::WorldLocation' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, bEnabledMovement) == 0x001A50, "Member 'UABP_PlayerCombatMovement_C::bEnabledMovement' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_PlayerCombatMovementComp) == 0x001A58, "Member 'UABP_PlayerCombatMovement_C::BP_PlayerCombatMovementComp' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_PrevJumpStage) == 0x001A60, "Member 'UABP_PlayerCombatMovement_C::BP_PrevJumpStage' has a wrong offset!");
static_assert(offsetof(UABP_PlayerCombatMovement_C, BP_RegularInAIrMovementComp) == 0x001A68, "Member 'UABP_PlayerCombatMovement_C::BP_RegularInAIrMovementComp' has a wrong offset!");

}

