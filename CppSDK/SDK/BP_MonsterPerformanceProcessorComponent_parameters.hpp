#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterPerformanceProcessorComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MonsterPerformanceProcessorComponent.BP_MonsterPerformanceProcessorComponent_C.BPI_SetCustomBossCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera final
{
public:
	class UCameraBaseParamsData*                  BossCameraConfig;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViewTargetTransitionParams            BlendInParam;                                      // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UClass*                                 CameraSynchronizerClass;                           // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera) == 0x000008, "Wrong alignment on BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera");
static_assert(sizeof(BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera) == 0x000030, "Wrong size on BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera, BossCameraConfig) == 0x000000, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera::BossCameraConfig' has a wrong offset!");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera, BlendInParam) == 0x000008, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera::BlendInParam' has a wrong offset!");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera, CameraSynchronizerClass) == 0x000028, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_SetCustomBossCamera::CameraSynchronizerClass' has a wrong offset!");

// Function BP_MonsterPerformanceProcessorComponent.BP_MonsterPerformanceProcessorComponent_C.BPI_ResetCustomBossCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera final
{
public:
	struct FViewTargetTransitionParams            BlendOutParam;                                     // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera) == 0x000008, "Wrong alignment on BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera");
static_assert(sizeof(BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera) == 0x000020, "Wrong size on BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera, BlendOutParam) == 0x000000, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_ResetCustomBossCamera::BlendOutParam' has a wrong offset!");

// Function BP_MonsterPerformanceProcessorComponent.BP_MonsterPerformanceProcessorComponent_C.BPI_PartDissolve
// 0x0018 (0x0018 - 0x0000)
struct BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve final
{
public:
	class UMeshComponent*                         mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         MaterialIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DissolveCurve;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve) == 0x000008, "Wrong alignment on BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve");
static_assert(sizeof(BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve) == 0x000018, "Wrong size on BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve, mesh) == 0x000000, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve::mesh' has a wrong offset!");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve, MaterialIndex) == 0x000008, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve::MaterialIndex' has a wrong offset!");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve, DissolveCurve) == 0x000010, "Member 'BP_MonsterPerformanceProcessorComponent_C_BPI_PartDissolve::DissolveCurve' has a wrong offset!");

// Function BP_MonsterPerformanceProcessorComponent.BP_MonsterPerformanceProcessorComponent_C.BP_SetHPForceHide
// 0x0001 (0x0001 - 0x0000)
struct BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide final
{
public:
	bool                                          bForceHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide) == 0x000001, "Wrong alignment on BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide");
static_assert(sizeof(BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide) == 0x000001, "Wrong size on BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide, bForceHide) == 0x000000, "Member 'BP_MonsterPerformanceProcessorComponent_C_BP_SetHPForceHide::bForceHide' has a wrong offset!");

// Function BP_MonsterPerformanceProcessorComponent.BP_MonsterPerformanceProcessorComponent_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_MonsterPerformanceProcessorComponent_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MonsterPerformanceProcessorComponent_C_GetModuleName) == 0x000008, "Wrong alignment on BP_MonsterPerformanceProcessorComponent_C_GetModuleName");
static_assert(sizeof(BP_MonsterPerformanceProcessorComponent_C_GetModuleName) == 0x000010, "Wrong size on BP_MonsterPerformanceProcessorComponent_C_GetModuleName");
static_assert(offsetof(BP_MonsterPerformanceProcessorComponent_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_MonsterPerformanceProcessorComponent_C_GetModuleName::ReturnValue' has a wrong offset!");

}

