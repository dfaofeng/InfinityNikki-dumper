#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BulletWindModifier

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "X6Game_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BulletWindModifier.BP_BulletWindModifier_C
// 0x0058 (0x00F8 - 0x00A0)
class UBP_BulletWindModifier_C final : public UX6BulletEffectWindZoneModifier
{
public:
	double                                        ExtraLifeSpan;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterEffectSize;                                   // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterEffectIntensity;                              // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            SizeCurve;                                         // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            IntensityCurve;                                    // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WindActorClass;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BigRangeTag;                                       // 0x00D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_EffectWindDataAsset_C*              WindData;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindZoneDirection;                                 // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FString GetModuleName() const;
	void K2_Destroy() const;
	void K2_Init() const;
	void K2_OnAsyncLoadComplete() const;
	void K2_Tick(float DeltaSeconds) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BulletWindModifier_C">();
	}
	static class UBP_BulletWindModifier_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BulletWindModifier_C>();
	}
};
static_assert(alignof(UBP_BulletWindModifier_C) == 0x000008, "Wrong alignment on UBP_BulletWindModifier_C");
static_assert(sizeof(UBP_BulletWindModifier_C) == 0x0000F8, "Wrong size on UBP_BulletWindModifier_C");
static_assert(offsetof(UBP_BulletWindModifier_C, ExtraLifeSpan) == 0x0000A0, "Member 'UBP_BulletWindModifier_C::ExtraLifeSpan' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, WaterEffectSize) == 0x0000A8, "Member 'UBP_BulletWindModifier_C::WaterEffectSize' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, WaterEffectIntensity) == 0x0000B0, "Member 'UBP_BulletWindModifier_C::WaterEffectIntensity' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, SizeCurve) == 0x0000B8, "Member 'UBP_BulletWindModifier_C::SizeCurve' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, IntensityCurve) == 0x0000C0, "Member 'UBP_BulletWindModifier_C::IntensityCurve' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, WindActorClass) == 0x0000C8, "Member 'UBP_BulletWindModifier_C::WindActorClass' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, BigRangeTag) == 0x0000D0, "Member 'UBP_BulletWindModifier_C::BigRangeTag' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, WindData) == 0x0000D8, "Member 'UBP_BulletWindModifier_C::WindData' has a wrong offset!");
static_assert(offsetof(UBP_BulletWindModifier_C, WindZoneDirection) == 0x0000E0, "Member 'UBP_BulletWindModifier_C::WindZoneDirection' has a wrong offset!");

}

