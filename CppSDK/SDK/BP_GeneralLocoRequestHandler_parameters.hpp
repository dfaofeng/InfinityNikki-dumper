#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GeneralLocoRequestHandler

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.BP_RequestTurnInPlaceByAngle
// 0x0010 (0x0010 - 0x0000)
struct BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRet;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle) == 0x000008, "Wrong alignment on BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle");
static_assert(sizeof(BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle) == 0x000010, "Wrong size on BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle, Angle) == 0x000000, "Member 'BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle::Angle' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle, bRet) == 0x000008, "Member 'BP_GeneralLocoRequestHandler_C_BP_RequestTurnInPlaceByAngle::bRet' has a wrong offset!");

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.ExecuteUbergraph_BP_GeneralLocoRequestHandler
// 0x0008 (0x0008 - 0x0000)
struct BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCanInterrupt;                        // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler) == 0x000004, "Wrong alignment on BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler");
static_assert(sizeof(BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler) == 0x000008, "Wrong size on BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler, EntryPoint) == 0x000000, "Member 'BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler, K2Node_Event_bCanInterrupt) == 0x000004, "Member 'BP_GeneralLocoRequestHandler_C_ExecuteUbergraph_BP_GeneralLocoRequestHandler::K2Node_Event_bCanInterrupt' has a wrong offset!");

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.RequestTurnInPlaceByAngle
// 0x0048 (0x0048 - 0x0000)
struct BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle final
{
public:
	float                                         InAngleToTurn;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             OnComplete;                                        // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             OnInterrupt;                                       // 0x0014(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_RequestTurnInPlaceByAngle_bRet;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BP_RequestTurnInPlaceByAngle_Angle_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle) == 0x000008, "Wrong alignment on BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle");
static_assert(sizeof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle) == 0x000048, "Wrong size on BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, InAngleToTurn) == 0x000000, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::InAngleToTurn' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, OnComplete) == 0x000004, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::OnComplete' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, OnInterrupt) == 0x000014, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::OnInterrupt' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, ReturnValue) == 0x000024, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, CallFunc_BP_RequestTurnInPlaceByAngle_bRet) == 0x000025, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::CallFunc_BP_RequestTurnInPlaceByAngle_bRet' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, CallFunc_GetOuterObject_ReturnValue) == 0x000028, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, K2Node_DynamicCast_AsActor) == 0x000030, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle, CallFunc_BP_RequestTurnInPlaceByAngle_Angle_ImplicitCast) == 0x000040, "Member 'BP_GeneralLocoRequestHandler_C_RequestTurnInPlaceByAngle::CallFunc_BP_RequestTurnInPlaceByAngle_Angle_ImplicitCast' has a wrong offset!");

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.SetCanInterruptPendingStopState
// 0x0001 (0x0001 - 0x0000)
struct BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState final
{
public:
	bool                                          bCanInterrupt;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState) == 0x000001, "Wrong alignment on BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState");
static_assert(sizeof(BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState) == 0x000001, "Wrong size on BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState, bCanInterrupt) == 0x000000, "Member 'BP_GeneralLocoRequestHandler_C_SetCanInterruptPendingStopState::bCanInterrupt' has a wrong offset!");

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.CanEverTurnInPlace
// 0x0001 (0x0001 - 0x0000)
struct BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace) == 0x000001, "Wrong alignment on BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace");
static_assert(sizeof(BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace) == 0x000001, "Wrong size on BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace, ReturnValue) == 0x000000, "Member 'BP_GeneralLocoRequestHandler_C_CanEverTurnInPlace::ReturnValue' has a wrong offset!");

// Function BP_GeneralLocoRequestHandler.BP_GeneralLocoRequestHandler_C.GetModuleName
// 0x0010 (0x0010 - 0x0000)
struct BP_GeneralLocoRequestHandler_C_GetModuleName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GeneralLocoRequestHandler_C_GetModuleName) == 0x000008, "Wrong alignment on BP_GeneralLocoRequestHandler_C_GetModuleName");
static_assert(sizeof(BP_GeneralLocoRequestHandler_C_GetModuleName) == 0x000010, "Wrong size on BP_GeneralLocoRequestHandler_C_GetModuleName");
static_assert(offsetof(BP_GeneralLocoRequestHandler_C_GetModuleName, ReturnValue) == 0x000000, "Member 'BP_GeneralLocoRequestHandler_C_GetModuleName::ReturnValue' has a wrong offset!");

}

