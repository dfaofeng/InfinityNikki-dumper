#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VolumetricsBPLIbrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Create and Assign MID
// 0x0028 (0x0028 - 0x0000)
struct VolumetricsBPLIbrary_C_Create_and_Assign_MID final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_Create_and_Assign_MID) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_Create_and_Assign_MID");
static_assert(sizeof(VolumetricsBPLIbrary_C_Create_and_Assign_MID) == 0x000028, "Wrong size on VolumetricsBPLIbrary_C_Create_and_Assign_MID");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, Mid) == 0x000000, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::Mid' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, Parent) == 0x000008, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::Parent' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, __WorldContext) == 0x000010, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_MID, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000022, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_MID::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Create and Assign RT
// 0x0030 (0x0030 - 0x0000)
struct VolumetricsBPLIbrary_C_Create_and_Assign_RT final
{
public:
	class UTextureRenderTarget2D*                 rt;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Size;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_Create_and_Assign_RT) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_Create_and_Assign_RT");
static_assert(sizeof(VolumetricsBPLIbrary_C_Create_and_Assign_RT) == 0x000030, "Wrong size on VolumetricsBPLIbrary_C_Create_and_Assign_RT");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, rt) == 0x000000, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::rt' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, Size) == 0x000008, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, Format) == 0x000010, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::Format' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, __WorldContext) == 0x000018, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000020, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002A, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Create_and_Assign_RT, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'VolumetricsBPLIbrary_C_Create_and_Assign_RT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.Get Texture Size
// 0x0020 (0x0020 - 0x0000)
struct VolumetricsBPLIbrary_C_Get_Texture_Size final
{
public:
	class UTexture*                               Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Size;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Out_Size;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_Get_Texture_Size) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_Get_Texture_Size");
static_assert(sizeof(VolumetricsBPLIbrary_C_Get_Texture_Size) == 0x000020, "Wrong size on VolumetricsBPLIbrary_C_Get_Texture_Size");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, Texture) == 0x000000, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::Texture' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, __WorldContext) == 0x000008, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, Size) == 0x000010, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_Get_Texture_Size, Out_Size) == 0x000018, "Member 'VolumetricsBPLIbrary_C_Get_Texture_Size::Out_Size' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.GetFirstActorOfClass
// 0x0028 (0x0028 - 0x0000)
struct VolumetricsBPLIbrary_C_GetFirstActorOfClass final
{
public:
	class UObject*                                WorldContent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Return_Actor;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_GetFirstActorOfClass) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_GetFirstActorOfClass");
static_assert(sizeof(VolumetricsBPLIbrary_C_GetFirstActorOfClass) == 0x000028, "Wrong size on VolumetricsBPLIbrary_C_GetFirstActorOfClass");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, WorldContent) == 0x000000, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::WorldContent' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, Class_0) == 0x000008, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::Class_0' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, __WorldContext) == 0x000010, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, Actor) == 0x000018, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::Actor' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_GetFirstActorOfClass, Return_Actor) == 0x000020, "Member 'VolumetricsBPLIbrary_C_GetFirstActorOfClass::Return_Actor' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.PseudoVolume Dimensions
// 0x0028 (0x0028 - 0x0000)
struct VolumetricsBPLIbrary_C_PseudoVolume_Dimensions final
{
public:
	uint8                                         Dimensions;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              RT_Size;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              XY_Frames;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Volume_Size;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_PseudoVolume_Dimensions");
static_assert(sizeof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions) == 0x000028, "Wrong size on VolumetricsBPLIbrary_C_PseudoVolume_Dimensions");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Dimensions) == 0x000000, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Dimensions' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, __WorldContext) == 0x000008, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, RT_Size) == 0x000010, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::RT_Size' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, XY_Frames) == 0x000018, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::XY_Frames' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_PseudoVolume_Dimensions, Volume_Size) == 0x000020, "Member 'VolumetricsBPLIbrary_C_PseudoVolume_Dimensions::Volume_Size' has a wrong offset!");

// Function VolumetricsBPLIbrary.VolumetricsBPLIbrary_C.RT Size Compare
// 0x0020 (0x0020 - 0x0000)
struct VolumetricsBPLIbrary_C_RT_Size_Compare final
{
public:
	class UTextureRenderTarget2D*                 A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Match;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VolumetricsBPLIbrary_C_RT_Size_Compare) == 0x000008, "Wrong alignment on VolumetricsBPLIbrary_C_RT_Size_Compare");
static_assert(sizeof(VolumetricsBPLIbrary_C_RT_Size_Compare) == 0x000020, "Wrong size on VolumetricsBPLIbrary_C_RT_Size_Compare");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, A) == 0x000000, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::A' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, B) == 0x000008, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::B' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, __WorldContext) == 0x000010, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::__WorldContext' has a wrong offset!");
static_assert(offsetof(VolumetricsBPLIbrary_C_RT_Size_Compare, Match) == 0x000018, "Member 'VolumetricsBPLIbrary_C_RT_Size_Compare::Match' has a wrong offset!");

}

