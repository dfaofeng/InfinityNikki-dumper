#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCG_SplineMesh_UE

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PCG_SplineMesh_UE.PCG_SplineMesh_UE_C
// 0x01B8 (0x0560 - 0x03A8)
class APCG_SplineMesh_UE_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USplineComponent*                       Spline;                                            // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSplineActor;                                    // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  SplineActor;                                       // 0x03C8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Spline_Closed_Loop;                                // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Length;                                            // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FillEndLength;                                     // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Length1;                                           // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End_Tang;                                          // 0x0418(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start_Pos;                                         // 0x0430(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start_Tang;                                        // 0x0448(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End_Pos;                                           // 0x0460(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            mesh;                                              // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Cull_Distance;                                     // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw_To_VT;                                        // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Start_Scale;                                       // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              End_Scale;                                         // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Scale2D;                                           // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Offset;                                          // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Z_Offset;                                          // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cast_Shadow;                                       // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Length_begin;                                      // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length_end;                                        // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Collision;                                     // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isWater;                                           // 0x04F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDetailMode                                   Detail_Mode;                                       // 0x04F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseInstanced;                                      // 0x04F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_HISM;                                          // 0x04F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSidePivot;                                       // 0x04F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6[0x2];                                      // 0x04F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Length2;                                           // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_1;                                           // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseHeadMesh;                                       // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            HeadMesh;                                          // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     HeadMaterial;                                      // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            EndMesh;                                           // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     EndMaterial;                                       // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Head_Mesh_Length;                                  // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        End_Mesh_Length;                                   // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          HeadInstancedComponent;                            // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          EndInstancedComponent;                             // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearForPIE;                                       // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Paper_Custom_Data;                             // 0x0551(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0x2];                                      // 0x0552(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Paper_Custom_Data;                                 // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideEnlightenMode;                             // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEnlightenLightingMode                        EnlightenLightingMode;                             // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopConstruction;                                  // 0x055A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Receives_Decals;                                   // 0x055B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bake_SVT_Only;                                     // 0x055C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddHISMComponent(class UInstancedStaticMeshComponent** InstancedComponent);
	void AddInstanceAlongSpline(double Mesh_Length, class UStaticMesh* Add_Mesh, class UMaterialInterface* Add_Mesh_Material, class UInstancedStaticMeshComponent* InstanceComponent, const struct FVector& Scale_0);
	void AddInstancedComponent(class UInstancedStaticMeshComponent** InstancedComponent);
	void AddISMComponent(class UInstancedStaticMeshComponent** InstancedComponent);
	void AddSplineMesh(class UStaticMesh* Add_Mesh, class UMaterialInterface* Material_0, double Length_0);
	void CustomEvent();
	void ExecuteUbergraph_PCG_SplineMesh_UE(int32 EntryPoint);
	void GetMeshLengthByAxis(class UStaticMesh* StaticMesh, double* MeshLength);
	void ReceiveBeginPlay();
	void Set_InstanceMesh_Attrib(class UInstancedStaticMeshComponent* InstanceComponent, class UStaticMesh* AddMesh, class UMaterialInterface* AddMesh_Material, double BoundsLength);
	void Set_SplinMesh_Attrib(class USplineMeshComponent* mesh_0, class UStaticMesh* Add_Mesh, class UMaterialInterface* Add_Material, double BoundsLength);
	void Update_Spline_Mesh();
	void Update_SplineActor_Mesh();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PCG_SplineMesh_UE_C">();
	}
	static class APCG_SplineMesh_UE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APCG_SplineMesh_UE_C>();
	}
};
static_assert(alignof(APCG_SplineMesh_UE_C) == 0x000008, "Wrong alignment on APCG_SplineMesh_UE_C");
static_assert(sizeof(APCG_SplineMesh_UE_C) == 0x000560, "Wrong size on APCG_SplineMesh_UE_C");
static_assert(offsetof(APCG_SplineMesh_UE_C, UberGraphFrame) == 0x0003A8, "Member 'APCG_SplineMesh_UE_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Spline) == 0x0003B0, "Member 'APCG_SplineMesh_UE_C::Spline' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, DefaultSceneRoot) == 0x0003B8, "Member 'APCG_SplineMesh_UE_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, UseSplineActor) == 0x0003C0, "Member 'APCG_SplineMesh_UE_C::UseSplineActor' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, SplineActor) == 0x0003C8, "Member 'APCG_SplineMesh_UE_C::SplineActor' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Spline_Closed_Loop) == 0x0003F0, "Member 'APCG_SplineMesh_UE_C::Spline_Closed_Loop' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Length) == 0x0003F8, "Member 'APCG_SplineMesh_UE_C::Length' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Scale) == 0x000400, "Member 'APCG_SplineMesh_UE_C::Scale' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, FillEndLength) == 0x000408, "Member 'APCG_SplineMesh_UE_C::FillEndLength' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Length1) == 0x000410, "Member 'APCG_SplineMesh_UE_C::Length1' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, End_Tang) == 0x000418, "Member 'APCG_SplineMesh_UE_C::End_Tang' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Start_Pos) == 0x000430, "Member 'APCG_SplineMesh_UE_C::Start_Pos' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Start_Tang) == 0x000448, "Member 'APCG_SplineMesh_UE_C::Start_Tang' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, End_Pos) == 0x000460, "Member 'APCG_SplineMesh_UE_C::End_Pos' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, mesh) == 0x000478, "Member 'APCG_SplineMesh_UE_C::mesh' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Cull_Distance) == 0x000480, "Member 'APCG_SplineMesh_UE_C::Cull_Distance' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Material) == 0x000488, "Member 'APCG_SplineMesh_UE_C::Material' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Draw_To_VT) == 0x000490, "Member 'APCG_SplineMesh_UE_C::Draw_To_VT' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Start_Scale) == 0x000498, "Member 'APCG_SplineMesh_UE_C::Start_Scale' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, End_Scale) == 0x0004A8, "Member 'APCG_SplineMesh_UE_C::End_Scale' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Scale2D) == 0x0004B8, "Member 'APCG_SplineMesh_UE_C::Scale2D' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, X_Offset) == 0x0004C8, "Member 'APCG_SplineMesh_UE_C::X_Offset' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Z_Offset) == 0x0004D0, "Member 'APCG_SplineMesh_UE_C::Z_Offset' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Cast_Shadow) == 0x0004D8, "Member 'APCG_SplineMesh_UE_C::Cast_Shadow' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Length_begin) == 0x0004E0, "Member 'APCG_SplineMesh_UE_C::Length_begin' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Length_end) == 0x0004E8, "Member 'APCG_SplineMesh_UE_C::Length_end' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Has_Collision) == 0x0004F0, "Member 'APCG_SplineMesh_UE_C::Has_Collision' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, isWater) == 0x0004F1, "Member 'APCG_SplineMesh_UE_C::isWater' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Detail_Mode) == 0x0004F2, "Member 'APCG_SplineMesh_UE_C::Detail_Mode' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, UseInstanced) == 0x0004F3, "Member 'APCG_SplineMesh_UE_C::UseInstanced' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Use_HISM) == 0x0004F4, "Member 'APCG_SplineMesh_UE_C::Use_HISM' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, IsSidePivot) == 0x0004F5, "Member 'APCG_SplineMesh_UE_C::IsSidePivot' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Length2) == 0x0004F8, "Member 'APCG_SplineMesh_UE_C::Length2' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Scale_1) == 0x000500, "Member 'APCG_SplineMesh_UE_C::Scale_1' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, UseHeadMesh) == 0x000508, "Member 'APCG_SplineMesh_UE_C::UseHeadMesh' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, HeadMesh) == 0x000510, "Member 'APCG_SplineMesh_UE_C::HeadMesh' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, HeadMaterial) == 0x000518, "Member 'APCG_SplineMesh_UE_C::HeadMaterial' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, EndMesh) == 0x000520, "Member 'APCG_SplineMesh_UE_C::EndMesh' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, EndMaterial) == 0x000528, "Member 'APCG_SplineMesh_UE_C::EndMaterial' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Head_Mesh_Length) == 0x000530, "Member 'APCG_SplineMesh_UE_C::Head_Mesh_Length' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, End_Mesh_Length) == 0x000538, "Member 'APCG_SplineMesh_UE_C::End_Mesh_Length' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, HeadInstancedComponent) == 0x000540, "Member 'APCG_SplineMesh_UE_C::HeadInstancedComponent' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, EndInstancedComponent) == 0x000548, "Member 'APCG_SplineMesh_UE_C::EndInstancedComponent' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, ClearForPIE) == 0x000550, "Member 'APCG_SplineMesh_UE_C::ClearForPIE' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Use_Paper_Custom_Data) == 0x000551, "Member 'APCG_SplineMesh_UE_C::Use_Paper_Custom_Data' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Paper_Custom_Data) == 0x000554, "Member 'APCG_SplineMesh_UE_C::Paper_Custom_Data' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, OverrideEnlightenMode) == 0x000558, "Member 'APCG_SplineMesh_UE_C::OverrideEnlightenMode' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, EnlightenLightingMode) == 0x000559, "Member 'APCG_SplineMesh_UE_C::EnlightenLightingMode' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, StopConstruction) == 0x00055A, "Member 'APCG_SplineMesh_UE_C::StopConstruction' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Receives_Decals) == 0x00055B, "Member 'APCG_SplineMesh_UE_C::Receives_Decals' has a wrong offset!");
static_assert(offsetof(APCG_SplineMesh_UE_C, Bake_SVT_Only) == 0x00055C, "Member 'APCG_SplineMesh_UE_C::Bake_SVT_Only' has a wrong offset!");

}

