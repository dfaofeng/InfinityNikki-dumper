#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PSDKPayPaperPC

#include "Basic.hpp"

#include "PSDKBasic_structs.hpp"


namespace SDK
{

// ScriptStruct PSDKPayPaperPC.PSdkPaperPayOrderInfoModel
// 0x00C0 (0x00C0 - 0x0000)
struct FPSdkPaperPayOrderInfoModel final
{
public:
	class FString                                 accnt_id;                                          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Amount;                                            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 channelOrderID;                                    // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 charge_type;                                       // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Image;                                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nid;                                               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Num;                                               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_extra;                                       // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_id;                                          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 order_ip;                                          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 product_id;                                        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperPayOrderInfoModel) == 0x000008, "Wrong alignment on FPSdkPaperPayOrderInfoModel");
static_assert(sizeof(FPSdkPaperPayOrderInfoModel) == 0x0000C0, "Wrong size on FPSdkPaperPayOrderInfoModel");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, accnt_id) == 0x000000, "Member 'FPSdkPaperPayOrderInfoModel::accnt_id' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, Amount) == 0x000010, "Member 'FPSdkPaperPayOrderInfoModel::Amount' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, channelOrderID) == 0x000020, "Member 'FPSdkPaperPayOrderInfoModel::channelOrderID' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, charge_type) == 0x000030, "Member 'FPSdkPaperPayOrderInfoModel::charge_type' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, Image) == 0x000040, "Member 'FPSdkPaperPayOrderInfoModel::Image' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, Nid) == 0x000050, "Member 'FPSdkPaperPayOrderInfoModel::Nid' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, Num) == 0x000060, "Member 'FPSdkPaperPayOrderInfoModel::Num' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, order_extra) == 0x000070, "Member 'FPSdkPaperPayOrderInfoModel::order_extra' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, order_id) == 0x000080, "Member 'FPSdkPaperPayOrderInfoModel::order_id' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, order_ip) == 0x000090, "Member 'FPSdkPaperPayOrderInfoModel::order_ip' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, Platform) == 0x0000A0, "Member 'FPSdkPaperPayOrderInfoModel::Platform' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderInfoModel, product_id) == 0x0000B0, "Member 'FPSdkPaperPayOrderInfoModel::product_id' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaperPayDataModel
// 0x00C0 (0x00C0 - 0x0000)
struct FPSdkPaperPayDataModel final
{
public:
	struct FPSdkPaperPayOrderInfoModel            Order_Info;                                        // 0x0000(0x00C0)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperPayDataModel) == 0x000008, "Wrong alignment on FPSdkPaperPayDataModel");
static_assert(sizeof(FPSdkPaperPayDataModel) == 0x0000C0, "Wrong size on FPSdkPaperPayDataModel");
static_assert(offsetof(FPSdkPaperPayDataModel, Order_Info) == 0x000000, "Member 'FPSdkPaperPayDataModel::Order_Info' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaperPayOrderModel
// 0x00C0 (0x00F8 - 0x0038)
struct FPSdkPaperPayOrderModel final : public FPSBffBasicModel
{
public:
	struct FPSdkPaperPayDataModel                 Data;                                              // 0x0038(0x00C0)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperPayOrderModel) == 0x000008, "Wrong alignment on FPSdkPaperPayOrderModel");
static_assert(sizeof(FPSdkPaperPayOrderModel) == 0x0000F8, "Wrong size on FPSdkPaperPayOrderModel");
static_assert(offsetof(FPSdkPaperPayOrderModel, Data) == 0x000038, "Member 'FPSdkPaperPayOrderModel::Data' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaperPayOrderStatusDataModel
// 0x0018 (0x0018 - 0x0000)
struct FPSdkPaperPayOrderStatusDataModel final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Desc;                                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperPayOrderStatusDataModel) == 0x000008, "Wrong alignment on FPSdkPaperPayOrderStatusDataModel");
static_assert(sizeof(FPSdkPaperPayOrderStatusDataModel) == 0x000018, "Wrong size on FPSdkPaperPayOrderStatusDataModel");
static_assert(offsetof(FPSdkPaperPayOrderStatusDataModel, Status) == 0x000000, "Member 'FPSdkPaperPayOrderStatusDataModel::Status' has a wrong offset!");
static_assert(offsetof(FPSdkPaperPayOrderStatusDataModel, Desc) == 0x000008, "Member 'FPSdkPaperPayOrderStatusDataModel::Desc' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaperPayOrderStatusModel
// 0x0018 (0x0050 - 0x0038)
struct FPSdkPaperPayOrderStatusModel final : public FPSBffBasicModel
{
public:
	struct FPSdkPaperPayOrderStatusDataModel      Data;                                              // 0x0038(0x0018)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaperPayOrderStatusModel) == 0x000008, "Wrong alignment on FPSdkPaperPayOrderStatusModel");
static_assert(sizeof(FPSdkPaperPayOrderStatusModel) == 0x000050, "Wrong size on FPSdkPaperPayOrderStatusModel");
static_assert(offsetof(FPSdkPaperPayOrderStatusModel, Data) == 0x000038, "Member 'FPSdkPaperPayOrderStatusModel::Data' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaymentChargeConfigsTipsContentData
// 0x0020 (0x0020 - 0x0000)
struct FPSdkPaymentChargeConfigsTipsContentData final
{
public:
	class FString                                 lang;                                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaymentChargeConfigsTipsContentData) == 0x000008, "Wrong alignment on FPSdkPaymentChargeConfigsTipsContentData");
static_assert(sizeof(FPSdkPaymentChargeConfigsTipsContentData) == 0x000020, "Wrong size on FPSdkPaymentChargeConfigsTipsContentData");
static_assert(offsetof(FPSdkPaymentChargeConfigsTipsContentData, lang) == 0x000000, "Member 'FPSdkPaymentChargeConfigsTipsContentData::lang' has a wrong offset!");
static_assert(offsetof(FPSdkPaymentChargeConfigsTipsContentData, Text) == 0x000010, "Member 'FPSdkPaymentChargeConfigsTipsContentData::Text' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaymentChargeConfigsTipsData
// 0x0010 (0x0010 - 0x0000)
struct FPSdkPaymentChargeConfigsTipsData final
{
public:
	TArray<struct FPSdkPaymentChargeConfigsTipsContentData> Content;                                 // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaymentChargeConfigsTipsData) == 0x000008, "Wrong alignment on FPSdkPaymentChargeConfigsTipsData");
static_assert(sizeof(FPSdkPaymentChargeConfigsTipsData) == 0x000010, "Wrong size on FPSdkPaymentChargeConfigsTipsData");
static_assert(offsetof(FPSdkPaymentChargeConfigsTipsData, Content) == 0x000000, "Member 'FPSdkPaymentChargeConfigsTipsData::Content' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaymentChargeConfigsData
// 0x0038 (0x0038 - 0x0000)
struct FPSdkPaymentChargeConfigsData final
{
public:
	class FString                                 client_id;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Area;                                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         charge_type;                                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPSdkPaymentChargeConfigsTipsData> tips;                                           // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaymentChargeConfigsData) == 0x000008, "Wrong alignment on FPSdkPaymentChargeConfigsData");
static_assert(sizeof(FPSdkPaymentChargeConfigsData) == 0x000038, "Wrong size on FPSdkPaymentChargeConfigsData");
static_assert(offsetof(FPSdkPaymentChargeConfigsData, client_id) == 0x000000, "Member 'FPSdkPaymentChargeConfigsData::client_id' has a wrong offset!");
static_assert(offsetof(FPSdkPaymentChargeConfigsData, Area) == 0x000010, "Member 'FPSdkPaymentChargeConfigsData::Area' has a wrong offset!");
static_assert(offsetof(FPSdkPaymentChargeConfigsData, charge_type) == 0x000020, "Member 'FPSdkPaymentChargeConfigsData::charge_type' has a wrong offset!");
static_assert(offsetof(FPSdkPaymentChargeConfigsData, tips) == 0x000028, "Member 'FPSdkPaymentChargeConfigsData::tips' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaymentConfigData
// 0x0010 (0x0010 - 0x0000)
struct FPSdkPaymentConfigData final
{
public:
	TArray<struct FPSdkPaymentChargeConfigsData>  chargeConfigs;                                     // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaymentConfigData) == 0x000008, "Wrong alignment on FPSdkPaymentConfigData");
static_assert(sizeof(FPSdkPaymentConfigData) == 0x000010, "Wrong size on FPSdkPaymentConfigData");
static_assert(offsetof(FPSdkPaymentConfigData, chargeConfigs) == 0x000000, "Member 'FPSdkPaymentConfigData::chargeConfigs' has a wrong offset!");

// ScriptStruct PSDKPayPaperPC.PSdkPaymentConfigModel
// 0x0010 (0x0048 - 0x0038)
struct FPSdkPaymentConfigModel final : public FPSBffBasicModel
{
public:
	struct FPSdkPaymentConfigData                 Data;                                              // 0x0038(0x0010)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FPSdkPaymentConfigModel) == 0x000008, "Wrong alignment on FPSdkPaymentConfigModel");
static_assert(sizeof(FPSdkPaymentConfigModel) == 0x000048, "Wrong size on FPSdkPaymentConfigModel");
static_assert(offsetof(FPSdkPaymentConfigModel, Data) == 0x000038, "Member 'FPSdkPaymentConfigModel::Data' has a wrong offset!");

}

