#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PaperSDKCross

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PaperSDKCross.PCCnLoginUIBindMobile.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIBindMobile_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIBindMobile_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PCCnLoginUIBindMobile_TextBoxInputCodeChanged");
static_assert(sizeof(PCCnLoginUIBindMobile_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PCCnLoginUIBindMobile_TextBoxInputCodeChanged");
static_assert(offsetof(PCCnLoginUIBindMobile_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PCCnLoginUIBindMobile_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIBindMobile.TextBoxInputMobileChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIBindMobile_TextBoxInputMobileChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIBindMobile_TextBoxInputMobileChanged) == 0x000008, "Wrong alignment on PCCnLoginUIBindMobile_TextBoxInputMobileChanged");
static_assert(sizeof(PCCnLoginUIBindMobile_TextBoxInputMobileChanged) == 0x000010, "Wrong size on PCCnLoginUIBindMobile_TextBoxInputMobileChanged");
static_assert(offsetof(PCCnLoginUIBindMobile_TextBoxInputMobileChanged, Text) == 0x000000, "Member 'PCCnLoginUIBindMobile_TextBoxInputMobileChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.AgreementUICloseCallback
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUICode_AgreementUICloseCallback final
{
public:
	bool                                          Check;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUICode_AgreementUICloseCallback) == 0x000001, "Wrong alignment on PCCnLoginUICode_AgreementUICloseCallback");
static_assert(sizeof(PCCnLoginUICode_AgreementUICloseCallback) == 0x000001, "Wrong size on PCCnLoginUICode_AgreementUICloseCallback");
static_assert(offsetof(PCCnLoginUICode_AgreementUICloseCallback, Check) == 0x000000, "Member 'PCCnLoginUICode_AgreementUICloseCallback::Check' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.AgreementUICloseToQrCallback
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUICode_AgreementUICloseToQrCallback final
{
public:
	bool                                          Check;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUICode_AgreementUICloseToQrCallback) == 0x000001, "Wrong alignment on PCCnLoginUICode_AgreementUICloseToQrCallback");
static_assert(sizeof(PCCnLoginUICode_AgreementUICloseToQrCallback) == 0x000001, "Wrong size on PCCnLoginUICode_AgreementUICloseToQrCallback");
static_assert(offsetof(PCCnLoginUICode_AgreementUICloseToQrCallback, Check) == 0x000000, "Member 'PCCnLoginUICode_AgreementUICloseToQrCallback::Check' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUICode_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUICode_OnCheckedButton) == 0x000001, "Wrong alignment on PCCnLoginUICode_OnCheckedButton");
static_assert(sizeof(PCCnLoginUICode_OnCheckedButton) == 0x000001, "Wrong size on PCCnLoginUICode_OnCheckedButton");
static_assert(offsetof(PCCnLoginUICode_OnCheckedButton, checked) == 0x000000, "Member 'PCCnLoginUICode_OnCheckedButton::checked' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.OnThirdDelegate
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUICode_OnThirdDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUICode_OnThirdDelegate) == 0x000001, "Wrong alignment on PCCnLoginUICode_OnThirdDelegate");
static_assert(sizeof(PCCnLoginUICode_OnThirdDelegate) == 0x000001, "Wrong size on PCCnLoginUICode_OnThirdDelegate");
static_assert(offsetof(PCCnLoginUICode_OnThirdDelegate, bRes) == 0x000000, "Member 'PCCnLoginUICode_OnThirdDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.OnThirdLoginButton
// 0x0008 (0x0008 - 0x0000)
struct PCCnLoginUICode_OnThirdLoginButton final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ClickedByUser;                                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUICode_OnThirdLoginButton) == 0x000004, "Wrong alignment on PCCnLoginUICode_OnThirdLoginButton");
static_assert(sizeof(PCCnLoginUICode_OnThirdLoginButton) == 0x000008, "Wrong size on PCCnLoginUICode_OnThirdLoginButton");
static_assert(offsetof(PCCnLoginUICode_OnThirdLoginButton, Index_0) == 0x000000, "Member 'PCCnLoginUICode_OnThirdLoginButton::Index_0' has a wrong offset!");
static_assert(offsetof(PCCnLoginUICode_OnThirdLoginButton, ClickedByUser) == 0x000004, "Member 'PCCnLoginUICode_OnThirdLoginButton::ClickedByUser' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.TextBoxInputAccountChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUICode_TextBoxInputAccountChanged final
{
public:
	class FString                                 NewAccount;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUICode_TextBoxInputAccountChanged) == 0x000008, "Wrong alignment on PCCnLoginUICode_TextBoxInputAccountChanged");
static_assert(sizeof(PCCnLoginUICode_TextBoxInputAccountChanged) == 0x000010, "Wrong size on PCCnLoginUICode_TextBoxInputAccountChanged");
static_assert(offsetof(PCCnLoginUICode_TextBoxInputAccountChanged, NewAccount) == 0x000000, "Member 'PCCnLoginUICode_TextBoxInputAccountChanged::NewAccount' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUICode_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUICode_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PCCnLoginUICode_TextBoxInputAccountCommit");
static_assert(sizeof(PCCnLoginUICode_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PCCnLoginUICode_TextBoxInputAccountCommit");
static_assert(offsetof(PCCnLoginUICode_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PCCnLoginUICode_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUICode_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PCCnLoginUICode_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUICode_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUICode_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PCCnLoginUICode_TextBoxInputCodeChanged");
static_assert(sizeof(PCCnLoginUICode_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PCCnLoginUICode_TextBoxInputCodeChanged");
static_assert(offsetof(PCCnLoginUICode_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PCCnLoginUICode_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUICode.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUICode_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUICode_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PCCnLoginUICode_TextBoxInputCodeCommit");
static_assert(sizeof(PCCnLoginUICode_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PCCnLoginUICode_TextBoxInputCodeCommit");
static_assert(offsetof(PCCnLoginUICode_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PCCnLoginUICode_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUICode_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PCCnLoginUICode_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIFast.OnDeleteItemCallback
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIFast_OnDeleteItemCallback final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIFast_OnDeleteItemCallback) == 0x000008, "Wrong alignment on PCCnLoginUIFast_OnDeleteItemCallback");
static_assert(sizeof(PCCnLoginUIFast_OnDeleteItemCallback) == 0x000010, "Wrong size on PCCnLoginUIFast_OnDeleteItemCallback");
static_assert(offsetof(PCCnLoginUIFast_OnDeleteItemCallback, Account) == 0x000000, "Member 'PCCnLoginUIFast_OnDeleteItemCallback::Account' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIFast.OnFocusItemChangeCallback
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIFast_OnFocusItemChangeCallback final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Focused;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIFast_OnFocusItemChangeCallback) == 0x000008, "Wrong alignment on PCCnLoginUIFast_OnFocusItemChangeCallback");
static_assert(sizeof(PCCnLoginUIFast_OnFocusItemChangeCallback) == 0x000018, "Wrong size on PCCnLoginUIFast_OnFocusItemChangeCallback");
static_assert(offsetof(PCCnLoginUIFast_OnFocusItemChangeCallback, Account) == 0x000000, "Member 'PCCnLoginUIFast_OnFocusItemChangeCallback::Account' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIFast_OnFocusItemChangeCallback, Focused) == 0x000010, "Member 'PCCnLoginUIFast_OnFocusItemChangeCallback::Focused' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIFast.OnSelectItemCallback
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIFast_OnSelectItemCallback final
{
public:
	class FString                                 Account;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIFast_OnSelectItemCallback) == 0x000008, "Wrong alignment on PCCnLoginUIFast_OnSelectItemCallback");
static_assert(sizeof(PCCnLoginUIFast_OnSelectItemCallback) == 0x000010, "Wrong size on PCCnLoginUIFast_OnSelectItemCallback");
static_assert(offsetof(PCCnLoginUIFast_OnSelectItemCallback, Account) == 0x000000, "Member 'PCCnLoginUIFast_OnSelectItemCallback::Account' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIFastItem.OnFocusChanged
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUIFastItem_OnFocusChanged final
{
public:
	bool                                          HasFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIFastItem_OnFocusChanged) == 0x000001, "Wrong alignment on PCCnLoginUIFastItem_OnFocusChanged");
static_assert(sizeof(PCCnLoginUIFastItem_OnFocusChanged) == 0x000001, "Wrong size on PCCnLoginUIFastItem_OnFocusChanged");
static_assert(offsetof(PCCnLoginUIFastItem_OnFocusChanged, HasFocus) == 0x000000, "Member 'PCCnLoginUIFastItem_OnFocusChanged::HasFocus' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputAccountChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputAccountChanged final
{
public:
	class FString                                 NewAccount;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputAccountChanged) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputAccountChanged");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputAccountChanged) == 0x000010, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputAccountChanged");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputAccountChanged, NewAccount) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputAccountChanged::NewAccount' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputAccountCommit");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputAccountCommit");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PCCnLoginUIForgetPassword_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputCodeChanged");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputCodeChanged");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputCodeCommit");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputCodeCommit");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PCCnLoginUIForgetPassword_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputPasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged) == 0x000010, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputPasswordChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PCCnLoginUIForgetPassword_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputRePasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged) == 0x000010, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputRePasswordChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIForgetPassword.TextBoxInputRePasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit) == 0x000008, "Wrong alignment on PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit");
static_assert(sizeof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit) == 0x000018, "Wrong size on PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit, Text) == 0x000000, "Member 'PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit, Type) == 0x000010, "Member 'PCCnLoginUIForgetPassword_TextBoxInputRePasswordCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.AgreementUICloseCallback
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUIPassword_AgreementUICloseCallback final
{
public:
	bool                                          Check;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIPassword_AgreementUICloseCallback) == 0x000001, "Wrong alignment on PCCnLoginUIPassword_AgreementUICloseCallback");
static_assert(sizeof(PCCnLoginUIPassword_AgreementUICloseCallback) == 0x000001, "Wrong size on PCCnLoginUIPassword_AgreementUICloseCallback");
static_assert(offsetof(PCCnLoginUIPassword_AgreementUICloseCallback, Check) == 0x000000, "Member 'PCCnLoginUIPassword_AgreementUICloseCallback::Check' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.AgreementUICloseToQrCallback
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUIPassword_AgreementUICloseToQrCallback final
{
public:
	bool                                          Check;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIPassword_AgreementUICloseToQrCallback) == 0x000001, "Wrong alignment on PCCnLoginUIPassword_AgreementUICloseToQrCallback");
static_assert(sizeof(PCCnLoginUIPassword_AgreementUICloseToQrCallback) == 0x000001, "Wrong size on PCCnLoginUIPassword_AgreementUICloseToQrCallback");
static_assert(offsetof(PCCnLoginUIPassword_AgreementUICloseToQrCallback, Check) == 0x000000, "Member 'PCCnLoginUIPassword_AgreementUICloseToQrCallback::Check' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUIPassword_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIPassword_OnCheckedButton) == 0x000001, "Wrong alignment on PCCnLoginUIPassword_OnCheckedButton");
static_assert(sizeof(PCCnLoginUIPassword_OnCheckedButton) == 0x000001, "Wrong size on PCCnLoginUIPassword_OnCheckedButton");
static_assert(offsetof(PCCnLoginUIPassword_OnCheckedButton, checked) == 0x000000, "Member 'PCCnLoginUIPassword_OnCheckedButton::checked' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.OnThirdDelegate
// 0x0001 (0x0001 - 0x0000)
struct PCCnLoginUIPassword_OnThirdDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIPassword_OnThirdDelegate) == 0x000001, "Wrong alignment on PCCnLoginUIPassword_OnThirdDelegate");
static_assert(sizeof(PCCnLoginUIPassword_OnThirdDelegate) == 0x000001, "Wrong size on PCCnLoginUIPassword_OnThirdDelegate");
static_assert(offsetof(PCCnLoginUIPassword_OnThirdDelegate, bRes) == 0x000000, "Member 'PCCnLoginUIPassword_OnThirdDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.OnThirdLoginButton
// 0x0008 (0x0008 - 0x0000)
struct PCCnLoginUIPassword_OnThirdLoginButton final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ClickedByUser;                                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIPassword_OnThirdLoginButton) == 0x000004, "Wrong alignment on PCCnLoginUIPassword_OnThirdLoginButton");
static_assert(sizeof(PCCnLoginUIPassword_OnThirdLoginButton) == 0x000008, "Wrong size on PCCnLoginUIPassword_OnThirdLoginButton");
static_assert(offsetof(PCCnLoginUIPassword_OnThirdLoginButton, Index_0) == 0x000000, "Member 'PCCnLoginUIPassword_OnThirdLoginButton::Index_0' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIPassword_OnThirdLoginButton, ClickedByUser) == 0x000004, "Member 'PCCnLoginUIPassword_OnThirdLoginButton::ClickedByUser' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIPassword_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIPassword_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PCCnLoginUIPassword_TextBoxInputAccountCommit");
static_assert(sizeof(PCCnLoginUIPassword_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PCCnLoginUIPassword_TextBoxInputAccountCommit");
static_assert(offsetof(PCCnLoginUIPassword_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PCCnLoginUIPassword_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIPassword_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PCCnLoginUIPassword_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIPassword.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIPassword_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIPassword_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PCCnLoginUIPassword_TextBoxInputPasswordCommit");
static_assert(sizeof(PCCnLoginUIPassword_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PCCnLoginUIPassword_TextBoxInputPasswordCommit");
static_assert(offsetof(PCCnLoginUIPassword_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PCCnLoginUIPassword_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIPassword_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PCCnLoginUIPassword_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIQr.OnCommonErrorPageRefreshButton
// 0x0004 (0x0004 - 0x0000)
struct PCCnLoginUIQr_OnCommonErrorPageRefreshButton final
{
public:
	int32                                         QrType;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIQr_OnCommonErrorPageRefreshButton) == 0x000004, "Wrong alignment on PCCnLoginUIQr_OnCommonErrorPageRefreshButton");
static_assert(sizeof(PCCnLoginUIQr_OnCommonErrorPageRefreshButton) == 0x000004, "Wrong size on PCCnLoginUIQr_OnCommonErrorPageRefreshButton");
static_assert(offsetof(PCCnLoginUIQr_OnCommonErrorPageRefreshButton, QrType) == 0x000000, "Member 'PCCnLoginUIQr_OnCommonErrorPageRefreshButton::QrType' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIQr.OnExpirePageRefreshButton
// 0x0004 (0x0004 - 0x0000)
struct PCCnLoginUIQr_OnExpirePageRefreshButton final
{
public:
	int32                                         QrType;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIQr_OnExpirePageRefreshButton) == 0x000004, "Wrong alignment on PCCnLoginUIQr_OnExpirePageRefreshButton");
static_assert(sizeof(PCCnLoginUIQr_OnExpirePageRefreshButton) == 0x000004, "Wrong size on PCCnLoginUIQr_OnExpirePageRefreshButton");
static_assert(offsetof(PCCnLoginUIQr_OnExpirePageRefreshButton, QrType) == 0x000000, "Member 'PCCnLoginUIQr_OnExpirePageRefreshButton::QrType' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIQr.OnGetFailedPageRetryButton
// 0x0004 (0x0004 - 0x0000)
struct PCCnLoginUIQr_OnGetFailedPageRetryButton final
{
public:
	int32                                         QrType;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIQr_OnGetFailedPageRetryButton) == 0x000004, "Wrong alignment on PCCnLoginUIQr_OnGetFailedPageRetryButton");
static_assert(sizeof(PCCnLoginUIQr_OnGetFailedPageRetryButton) == 0x000004, "Wrong size on PCCnLoginUIQr_OnGetFailedPageRetryButton");
static_assert(offsetof(PCCnLoginUIQr_OnGetFailedPageRetryButton, QrType) == 0x000000, "Member 'PCCnLoginUIQr_OnGetFailedPageRetryButton::QrType' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIQr.OnInvalidPageRefreshButton
// 0x0004 (0x0004 - 0x0000)
struct PCCnLoginUIQr_OnInvalidPageRefreshButton final
{
public:
	int32                                         QrType;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIQr_OnInvalidPageRefreshButton) == 0x000004, "Wrong alignment on PCCnLoginUIQr_OnInvalidPageRefreshButton");
static_assert(sizeof(PCCnLoginUIQr_OnInvalidPageRefreshButton) == 0x000004, "Wrong size on PCCnLoginUIQr_OnInvalidPageRefreshButton");
static_assert(offsetof(PCCnLoginUIQr_OnInvalidPageRefreshButton, QrType) == 0x000000, "Member 'PCCnLoginUIQr_OnInvalidPageRefreshButton::QrType' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIQr.OnNotSupportPageRetryButton
// 0x0004 (0x0004 - 0x0000)
struct PCCnLoginUIQr_OnNotSupportPageRetryButton final
{
public:
	int32                                         QrType;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIQr_OnNotSupportPageRetryButton) == 0x000004, "Wrong alignment on PCCnLoginUIQr_OnNotSupportPageRetryButton");
static_assert(sizeof(PCCnLoginUIQr_OnNotSupportPageRetryButton) == 0x000004, "Wrong size on PCCnLoginUIQr_OnNotSupportPageRetryButton");
static_assert(offsetof(PCCnLoginUIQr_OnNotSupportPageRetryButton, QrType) == 0x000000, "Member 'PCCnLoginUIQr_OnNotSupportPageRetryButton::QrType' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIQr.OnScanSuccessfulPageCancelButton
// 0x0004 (0x0004 - 0x0000)
struct PCCnLoginUIQr_OnScanSuccessfulPageCancelButton final
{
public:
	int32                                         QrType;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCCnLoginUIQr_OnScanSuccessfulPageCancelButton) == 0x000004, "Wrong alignment on PCCnLoginUIQr_OnScanSuccessfulPageCancelButton");
static_assert(sizeof(PCCnLoginUIQr_OnScanSuccessfulPageCancelButton) == 0x000004, "Wrong size on PCCnLoginUIQr_OnScanSuccessfulPageCancelButton");
static_assert(offsetof(PCCnLoginUIQr_OnScanSuccessfulPageCancelButton, QrType) == 0x000000, "Member 'PCCnLoginUIQr_OnScanSuccessfulPageCancelButton::QrType' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIRealNameFillOut.TextBoxInputIdCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit) == 0x000008, "Wrong alignment on PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit");
static_assert(sizeof(PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit) == 0x000018, "Wrong size on PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit");
static_assert(offsetof(PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit, Text) == 0x000000, "Member 'PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit, Type) == 0x000010, "Member 'PCCnLoginUIRealNameFillOut_TextBoxInputIdCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCCnLoginUIRealNameFillOut.TextBoxInputNameCommit
// 0x0018 (0x0018 - 0x0000)
struct PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit) == 0x000008, "Wrong alignment on PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit");
static_assert(sizeof(PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit) == 0x000018, "Wrong size on PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit");
static_assert(offsetof(PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit, Text) == 0x000000, "Member 'PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit::Text' has a wrong offset!");
static_assert(offsetof(PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit, Type) == 0x000010, "Member 'PCCnLoginUIRealNameFillOut_TextBoxInputNameCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PCOverseasRealNameBrowser.HandleBeforePopup
// 0x0020 (0x0020 - 0x0000)
struct PCOverseasRealNameBrowser_HandleBeforePopup final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCOverseasRealNameBrowser_HandleBeforePopup) == 0x000008, "Wrong alignment on PCOverseasRealNameBrowser_HandleBeforePopup");
static_assert(sizeof(PCOverseasRealNameBrowser_HandleBeforePopup) == 0x000020, "Wrong size on PCOverseasRealNameBrowser_HandleBeforePopup");
static_assert(offsetof(PCOverseasRealNameBrowser_HandleBeforePopup, URL) == 0x000000, "Member 'PCOverseasRealNameBrowser_HandleBeforePopup::URL' has a wrong offset!");
static_assert(offsetof(PCOverseasRealNameBrowser_HandleBeforePopup, Frame) == 0x000010, "Member 'PCOverseasRealNameBrowser_HandleBeforePopup::Frame' has a wrong offset!");

// Function PaperSDKCross.PCOverseasRealNameBrowser.HandleConsoleMessage
// 0x0028 (0x0028 - 0x0000)
struct PCOverseasRealNameBrowser_HandleConsoleMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Source;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Line;                                              // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCOverseasRealNameBrowser_HandleConsoleMessage) == 0x000008, "Wrong alignment on PCOverseasRealNameBrowser_HandleConsoleMessage");
static_assert(sizeof(PCOverseasRealNameBrowser_HandleConsoleMessage) == 0x000028, "Wrong size on PCOverseasRealNameBrowser_HandleConsoleMessage");
static_assert(offsetof(PCOverseasRealNameBrowser_HandleConsoleMessage, Message) == 0x000000, "Member 'PCOverseasRealNameBrowser_HandleConsoleMessage::Message' has a wrong offset!");
static_assert(offsetof(PCOverseasRealNameBrowser_HandleConsoleMessage, Source) == 0x000010, "Member 'PCOverseasRealNameBrowser_HandleConsoleMessage::Source' has a wrong offset!");
static_assert(offsetof(PCOverseasRealNameBrowser_HandleConsoleMessage, Line) == 0x000020, "Member 'PCOverseasRealNameBrowser_HandleConsoleMessage::Line' has a wrong offset!");

// Function PaperSDKCross.PCOverseasRealNameBrowser.HandleUrlChanged
// 0x0010 (0x0010 - 0x0000)
struct PCOverseasRealNameBrowser_HandleUrlChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCOverseasRealNameBrowser_HandleUrlChanged) == 0x000008, "Wrong alignment on PCOverseasRealNameBrowser_HandleUrlChanged");
static_assert(sizeof(PCOverseasRealNameBrowser_HandleUrlChanged) == 0x000010, "Wrong size on PCOverseasRealNameBrowser_HandleUrlChanged");
static_assert(offsetof(PCOverseasRealNameBrowser_HandleUrlChanged, Text) == 0x000000, "Member 'PCOverseasRealNameBrowser_HandleUrlChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCOverseasRealNameBrowser.OnCloseButton
// 0x0018 (0x0018 - 0x0000)
struct PCOverseasRealNameBrowser_OnCloseButton final
{
public:
	bool                                          CloseType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 msg;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCOverseasRealNameBrowser_OnCloseButton) == 0x000008, "Wrong alignment on PCOverseasRealNameBrowser_OnCloseButton");
static_assert(sizeof(PCOverseasRealNameBrowser_OnCloseButton) == 0x000018, "Wrong size on PCOverseasRealNameBrowser_OnCloseButton");
static_assert(offsetof(PCOverseasRealNameBrowser_OnCloseButton, CloseType) == 0x000000, "Member 'PCOverseasRealNameBrowser_OnCloseButton::CloseType' has a wrong offset!");
static_assert(offsetof(PCOverseasRealNameBrowser_OnCloseButton, msg) == 0x000008, "Member 'PCOverseasRealNameBrowser_OnCloseButton::msg' has a wrong offset!");

// Function PaperSDKCross.PCThridLoginUIBrowser.HandleBeforePopup
// 0x0020 (0x0020 - 0x0000)
struct PCThridLoginUIBrowser_HandleBeforePopup final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Frame;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCThridLoginUIBrowser_HandleBeforePopup) == 0x000008, "Wrong alignment on PCThridLoginUIBrowser_HandleBeforePopup");
static_assert(sizeof(PCThridLoginUIBrowser_HandleBeforePopup) == 0x000020, "Wrong size on PCThridLoginUIBrowser_HandleBeforePopup");
static_assert(offsetof(PCThridLoginUIBrowser_HandleBeforePopup, URL) == 0x000000, "Member 'PCThridLoginUIBrowser_HandleBeforePopup::URL' has a wrong offset!");
static_assert(offsetof(PCThridLoginUIBrowser_HandleBeforePopup, Frame) == 0x000010, "Member 'PCThridLoginUIBrowser_HandleBeforePopup::Frame' has a wrong offset!");

// Function PaperSDKCross.PCThridLoginUIBrowser.HandleConsoleMessage
// 0x0028 (0x0028 - 0x0000)
struct PCThridLoginUIBrowser_HandleConsoleMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Source;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Line;                                              // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PCThridLoginUIBrowser_HandleConsoleMessage) == 0x000008, "Wrong alignment on PCThridLoginUIBrowser_HandleConsoleMessage");
static_assert(sizeof(PCThridLoginUIBrowser_HandleConsoleMessage) == 0x000028, "Wrong size on PCThridLoginUIBrowser_HandleConsoleMessage");
static_assert(offsetof(PCThridLoginUIBrowser_HandleConsoleMessage, Message) == 0x000000, "Member 'PCThridLoginUIBrowser_HandleConsoleMessage::Message' has a wrong offset!");
static_assert(offsetof(PCThridLoginUIBrowser_HandleConsoleMessage, Source) == 0x000010, "Member 'PCThridLoginUIBrowser_HandleConsoleMessage::Source' has a wrong offset!");
static_assert(offsetof(PCThridLoginUIBrowser_HandleConsoleMessage, Line) == 0x000020, "Member 'PCThridLoginUIBrowser_HandleConsoleMessage::Line' has a wrong offset!");

// Function PaperSDKCross.PCThridLoginUIBrowser.HandleUrlChanged
// 0x0010 (0x0010 - 0x0000)
struct PCThridLoginUIBrowser_HandleUrlChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCThridLoginUIBrowser_HandleUrlChanged) == 0x000008, "Wrong alignment on PCThridLoginUIBrowser_HandleUrlChanged");
static_assert(sizeof(PCThridLoginUIBrowser_HandleUrlChanged) == 0x000010, "Wrong size on PCThridLoginUIBrowser_HandleUrlChanged");
static_assert(offsetof(PCThridLoginUIBrowser_HandleUrlChanged, Text) == 0x000000, "Member 'PCThridLoginUIBrowser_HandleUrlChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PCThridLoginUIBrowser.OnCloseButton
// 0x0018 (0x0018 - 0x0000)
struct PCThridLoginUIBrowser_OnCloseButton final
{
public:
	int32                                         CloseType;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 msg;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PCThridLoginUIBrowser_OnCloseButton) == 0x000008, "Wrong alignment on PCThridLoginUIBrowser_OnCloseButton");
static_assert(sizeof(PCThridLoginUIBrowser_OnCloseButton) == 0x000018, "Wrong size on PCThridLoginUIBrowser_OnCloseButton");
static_assert(offsetof(PCThridLoginUIBrowser_OnCloseButton, CloseType) == 0x000000, "Member 'PCThridLoginUIBrowser_OnCloseButton::CloseType' has a wrong offset!");
static_assert(offsetof(PCThridLoginUIBrowser_OnCloseButton, msg) == 0x000008, "Member 'PCThridLoginUIBrowser_OnCloseButton::msg' has a wrong offset!");

// Function PaperSDKCross.PS5Button.SetButtonText
// 0x0010 (0x0010 - 0x0000)
struct PS5Button_SetButtonText final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5Button_SetButtonText) == 0x000008, "Wrong alignment on PS5Button_SetButtonText");
static_assert(sizeof(PS5Button_SetButtonText) == 0x000010, "Wrong size on PS5Button_SetButtonText");
static_assert(offsetof(PS5Button_SetButtonText, Text) == 0x000000, "Member 'PS5Button_SetButtonText::Text' has a wrong offset!");

// Function PaperSDKCross.PS5Button.SetTextColor
// 0x0010 (0x0010 - 0x0000)
struct PS5Button_SetTextColor final
{
public:
	class FString                                 Color;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5Button_SetTextColor) == 0x000008, "Wrong alignment on PS5Button_SetTextColor");
static_assert(sizeof(PS5Button_SetTextColor) == 0x000010, "Wrong size on PS5Button_SetTextColor");
static_assert(offsetof(PS5Button_SetTextColor, Color) == 0x000000, "Member 'PS5Button_SetTextColor::Color' has a wrong offset!");

// Function PaperSDKCross.PS5Button.SetTextFont
// 0x0018 (0x0018 - 0x0000)
struct PS5Button_SetTextFont final
{
public:
	class FString                                 FaceName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FontSize;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5Button_SetTextFont) == 0x000008, "Wrong alignment on PS5Button_SetTextFont");
static_assert(sizeof(PS5Button_SetTextFont) == 0x000018, "Wrong size on PS5Button_SetTextFont");
static_assert(offsetof(PS5Button_SetTextFont, FaceName) == 0x000000, "Member 'PS5Button_SetTextFont::FaceName' has a wrong offset!");
static_assert(offsetof(PS5Button_SetTextFont, FontSize) == 0x000010, "Member 'PS5Button_SetTextFont::FontSize' has a wrong offset!");

// Function PaperSDKCross.PS5LoginUIBase.OnGamepadButton
// 0x0040 (0x0040 - 0x0000)
struct PS5LoginUIBase_OnGamepadButton final
{
public:
	struct FKeyEvent                              KeyEvent;                                          // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5LoginUIBase_OnGamepadButton) == 0x000008, "Wrong alignment on PS5LoginUIBase_OnGamepadButton");
static_assert(sizeof(PS5LoginUIBase_OnGamepadButton) == 0x000040, "Wrong size on PS5LoginUIBase_OnGamepadButton");
static_assert(offsetof(PS5LoginUIBase_OnGamepadButton, KeyEvent) == 0x000000, "Member 'PS5LoginUIBase_OnGamepadButton::KeyEvent' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton1AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton1AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton1RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton1RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton2AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton2AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton2RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton2RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton3AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton3AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton3RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton3RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton4AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton4AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCheckBoxButton4RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCheckBoxButton4RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCreateAccountBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCreateAccountBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnCreateAccountBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnCreateAccountBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnPolicyAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnPolicyAddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnPolicyAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnPolicyAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnPolicyAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnPolicyAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnPolicyAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnPolicyAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.KrOnPolicyRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_KrOnPolicyRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnAccountLoginBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnAccountLoginBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnAccountLoginBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnAccountLoginBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnCheckBoxButton
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnCheckBoxButton final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnCheckBoxButton) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnCheckBoxButton");
static_assert(sizeof(PS5CnLoginUIMain_OnCheckBoxButton) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnCheckBoxButton");
static_assert(offsetof(PS5CnLoginUIMain_OnCheckBoxButton, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnCheckBoxButton::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnCheckBoxButtonAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnCheckBoxButtonAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnCheckBoxButtonRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnCheckBoxButtonRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnCloseButton
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnCloseButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnCloseButton) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnCloseButton");
static_assert(sizeof(PS5CnLoginUIMain_OnCloseButton) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnCloseButton");
static_assert(offsetof(PS5CnLoginUIMain_OnCloseButton, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnCloseButton::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnCreateAccountBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnCreateAccountBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnCreateAccountBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnCreateAccountBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnGetCodeBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnGetCodeBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnGetCodeBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnGetCodeBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnPolicyAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnPolicyAddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnPolicyAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnPolicyAddedToFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnPolicyAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnPolicyAddedToFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnPolicyAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnPolicyAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.OnPolicyRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIMain_OnPolicyRemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIMain_OnPolicyRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_OnPolicyRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIMain_OnPolicyRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIMain_OnPolicyRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIMain_OnPolicyRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIMain_OnPolicyRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.TextBoxInputAccountLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnLoginUIMain_TextBoxInputAccountLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnLoginUIMain_TextBoxInputAccountLoseFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_TextBoxInputAccountLoseFocus");
static_assert(sizeof(PS5CnLoginUIMain_TextBoxInputAccountLoseFocus) == 0x000020, "Wrong size on PS5CnLoginUIMain_TextBoxInputAccountLoseFocus");
static_assert(offsetof(PS5CnLoginUIMain_TextBoxInputAccountLoseFocus, TextBox) == 0x000000, "Member 'PS5CnLoginUIMain_TextBoxInputAccountLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIMain_TextBoxInputAccountLoseFocus, Text) == 0x000008, "Member 'PS5CnLoginUIMain_TextBoxInputAccountLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIMain_TextBoxInputAccountLoseFocus, Type) == 0x000018, "Member 'PS5CnLoginUIMain_TextBoxInputAccountLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIMain.TextBoxInputCodeLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnLoginUIMain_TextBoxInputCodeLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnLoginUIMain_TextBoxInputCodeLoseFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIMain_TextBoxInputCodeLoseFocus");
static_assert(sizeof(PS5CnLoginUIMain_TextBoxInputCodeLoseFocus) == 0x000020, "Wrong size on PS5CnLoginUIMain_TextBoxInputCodeLoseFocus");
static_assert(offsetof(PS5CnLoginUIMain_TextBoxInputCodeLoseFocus, TextBox) == 0x000000, "Member 'PS5CnLoginUIMain_TextBoxInputCodeLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIMain_TextBoxInputCodeLoseFocus, Text) == 0x000008, "Member 'PS5CnLoginUIMain_TextBoxInputCodeLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIMain_TextBoxInputCodeLoseFocus, Type) == 0x000018, "Member 'PS5CnLoginUIMain_TextBoxInputCodeLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIRealNameFillOut.OnCommitBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus");
static_assert(sizeof(PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnLoginUIRealNameFillOut_OnCommitBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIRealNameFillOut.OnCommitBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus");
static_assert(sizeof(PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnLoginUIRealNameFillOut_OnCommitBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIRealNameFillOut.TextBoxInputIdLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus");
static_assert(sizeof(PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus) == 0x000020, "Wrong size on PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus, TextBox) == 0x000000, "Member 'PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus, Text) == 0x000008, "Member 'PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus, Type) == 0x000018, "Member 'PS5CnLoginUIRealNameFillOut_TextBoxInputIdLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnLoginUIRealNameFillOut.TextBoxInputNameLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus) == 0x000008, "Wrong alignment on PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus");
static_assert(sizeof(PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus) == 0x000020, "Wrong size on PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus, TextBox) == 0x000000, "Member 'PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus, Text) == 0x000008, "Member 'PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus, Type) == 0x000018, "Member 'PS5CnLoginUIRealNameFillOut_TextBoxInputNameLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnCommitBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnCommitBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnCommitBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnCommitBtnAddedToFocus");
static_assert(sizeof(PS5CnUISetAccount_OnCommitBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnCommitBtnAddedToFocus");
static_assert(offsetof(PS5CnUISetAccount_OnCommitBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnCommitBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnCommitBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnCommitBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnCommitBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnCommitBtnRemovedFromFocus");
static_assert(sizeof(PS5CnUISetAccount_OnCommitBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnCommitBtnRemovedFromFocus");
static_assert(offsetof(PS5CnUISetAccount_OnCommitBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnCommitBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnEyeBtn2AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnEyeBtn2AddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnEyeBtn2AddedToFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnEyeBtn2AddedToFocus");
static_assert(sizeof(PS5CnUISetAccount_OnEyeBtn2AddedToFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnEyeBtn2AddedToFocus");
static_assert(offsetof(PS5CnUISetAccount_OnEyeBtn2AddedToFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnEyeBtn2AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnEyeBtn2RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus");
static_assert(sizeof(PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus");
static_assert(offsetof(PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnEyeBtn2RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnEyeBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnEyeBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnEyeBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnEyeBtnAddedToFocus");
static_assert(sizeof(PS5CnUISetAccount_OnEyeBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnEyeBtnAddedToFocus");
static_assert(offsetof(PS5CnUISetAccount_OnEyeBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnEyeBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnEyeBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnEyeBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnEyeBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnEyeBtnRemovedFromFocus");
static_assert(sizeof(PS5CnUISetAccount_OnEyeBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnEyeBtnRemovedFromFocus");
static_assert(offsetof(PS5CnUISetAccount_OnEyeBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnEyeBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnGetCodeBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnGetCodeBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnGetCodeBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnGetCodeBtnAddedToFocus");
static_assert(sizeof(PS5CnUISetAccount_OnGetCodeBtnAddedToFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnGetCodeBtnAddedToFocus");
static_assert(offsetof(PS5CnUISetAccount_OnGetCodeBtnAddedToFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnGetCodeBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.OnGetCodeBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus");
static_assert(sizeof(PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus");
static_assert(offsetof(PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5CnUISetAccount_OnGetCodeBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.TextBoxInputAccountLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnUISetAccount_TextBoxInputAccountLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnUISetAccount_TextBoxInputAccountLoseFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_TextBoxInputAccountLoseFocus");
static_assert(sizeof(PS5CnUISetAccount_TextBoxInputAccountLoseFocus) == 0x000020, "Wrong size on PS5CnUISetAccount_TextBoxInputAccountLoseFocus");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputAccountLoseFocus, TextBox) == 0x000000, "Member 'PS5CnUISetAccount_TextBoxInputAccountLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputAccountLoseFocus, Text) == 0x000008, "Member 'PS5CnUISetAccount_TextBoxInputAccountLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputAccountLoseFocus, Type) == 0x000018, "Member 'PS5CnUISetAccount_TextBoxInputAccountLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.TextBoxInputCodeLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnUISetAccount_TextBoxInputCodeLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnUISetAccount_TextBoxInputCodeLoseFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_TextBoxInputCodeLoseFocus");
static_assert(sizeof(PS5CnUISetAccount_TextBoxInputCodeLoseFocus) == 0x000020, "Wrong size on PS5CnUISetAccount_TextBoxInputCodeLoseFocus");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputCodeLoseFocus, TextBox) == 0x000000, "Member 'PS5CnUISetAccount_TextBoxInputCodeLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputCodeLoseFocus, Text) == 0x000008, "Member 'PS5CnUISetAccount_TextBoxInputCodeLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputCodeLoseFocus, Type) == 0x000018, "Member 'PS5CnUISetAccount_TextBoxInputCodeLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.TextBoxInputPassword2LoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnUISetAccount_TextBoxInputPassword2LoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnUISetAccount_TextBoxInputPassword2LoseFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_TextBoxInputPassword2LoseFocus");
static_assert(sizeof(PS5CnUISetAccount_TextBoxInputPassword2LoseFocus) == 0x000020, "Wrong size on PS5CnUISetAccount_TextBoxInputPassword2LoseFocus");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputPassword2LoseFocus, TextBox) == 0x000000, "Member 'PS5CnUISetAccount_TextBoxInputPassword2LoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputPassword2LoseFocus, Text) == 0x000008, "Member 'PS5CnUISetAccount_TextBoxInputPassword2LoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputPassword2LoseFocus, Type) == 0x000018, "Member 'PS5CnUISetAccount_TextBoxInputPassword2LoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5CnUISetAccount.TextBoxInputPasswordLoseFocus
// 0x0020 (0x0020 - 0x0000)
struct PS5CnUISetAccount_TextBoxInputPasswordLoseFocus final
{
public:
	class UEditableTextBox*                       TextBox;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Text;                                              // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PS5CnUISetAccount_TextBoxInputPasswordLoseFocus) == 0x000008, "Wrong alignment on PS5CnUISetAccount_TextBoxInputPasswordLoseFocus");
static_assert(sizeof(PS5CnUISetAccount_TextBoxInputPasswordLoseFocus) == 0x000020, "Wrong size on PS5CnUISetAccount_TextBoxInputPasswordLoseFocus");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputPasswordLoseFocus, TextBox) == 0x000000, "Member 'PS5CnUISetAccount_TextBoxInputPasswordLoseFocus::TextBox' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputPasswordLoseFocus, Text) == 0x000008, "Member 'PS5CnUISetAccount_TextBoxInputPasswordLoseFocus::Text' has a wrong offset!");
static_assert(offsetof(PS5CnUISetAccount_TextBoxInputPasswordLoseFocus, Type) == 0x000018, "Member 'PS5CnUISetAccount_TextBoxInputPasswordLoseFocus::Type' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton1AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton1AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton1RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton1RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton2AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton2AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton2RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton2RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton3AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton3AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton3RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton3RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton4AddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton4AddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCheckBoxButton4RemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCheckBoxButton4RemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCreateAccountBtnAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCreateAccountBtnAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnCreateAccountBtnRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnCreateAccountBtnRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnPolicyAddedToFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnPolicyAddedToFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnPolicyAddedToFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnPolicyAddedToFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnPolicyAddedToFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnPolicyAddedToFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnPolicyAddedToFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnPolicyAddedToFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PS5KrLoginUIMain.OnPolicyRemovedFromFocus
// 0x0008 (0x0008 - 0x0000)
struct PS5KrLoginUIMain_OnPolicyRemovedFromFocus final
{
public:
	const class UPS5Button*                       Button;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PS5KrLoginUIMain_OnPolicyRemovedFromFocus) == 0x000008, "Wrong alignment on PS5KrLoginUIMain_OnPolicyRemovedFromFocus");
static_assert(sizeof(PS5KrLoginUIMain_OnPolicyRemovedFromFocus) == 0x000008, "Wrong size on PS5KrLoginUIMain_OnPolicyRemovedFromFocus");
static_assert(offsetof(PS5KrLoginUIMain_OnPolicyRemovedFromFocus, Button) == 0x000000, "Member 'PS5KrLoginUIMain_OnPolicyRemovedFromFocus::Button' has a wrong offset!");

// Function PaperSDKCross.PSDKGamePadAdditionalHelperFunctionLibrary.DoesSupportGamePadFeature
// 0x0001 (0x0001 - 0x0000)
struct PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature) == 0x000001, "Wrong alignment on PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature");
static_assert(sizeof(PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature) == 0x000001, "Wrong size on PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature");
static_assert(offsetof(PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature, ReturnValue) == 0x000000, "Member 'PSDKGamePadAdditionalHelperFunctionLibrary_DoesSupportGamePadFeature::ReturnValue' has a wrong offset!");

// Function PaperSDKCross.PSDKGamePadAdditionalHelperFunctionLibrary.GetGamePadLocalizationByKey
// 0x0020 (0x0020 - 0x0000)
struct PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey) == 0x000008, "Wrong alignment on PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey");
static_assert(sizeof(PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey) == 0x000020, "Wrong size on PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey");
static_assert(offsetof(PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey, Key) == 0x000000, "Member 'PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey::Key' has a wrong offset!");
static_assert(offsetof(PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey, ReturnValue) == 0x000010, "Member 'PSDKGamePadAdditionalHelperFunctionLibrary_GetGamePadLocalizationByKey::ReturnValue' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnCancelAuthButtonAddedToFocus
// 0x0010 (0x0010 - 0x0000)
struct PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus final
{
public:
	class UPS5Button*                             Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Focus;                                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus) == 0x000008, "Wrong alignment on PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus) == 0x000010, "Wrong size on PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus, Button) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus::Button' has a wrong offset!");
static_assert(offsetof(PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus, Focus) == 0x000008, "Member 'PSdkPsQrCodeWidget_OnCancelAuthButtonAddedToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnCommonErrorRefreshButtonAddToFocus
// 0x0001 (0x0001 - 0x0000)
struct PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus) == 0x000001, "Wrong alignment on PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus) == 0x000001, "Wrong size on PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus, Focus) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnCommonErrorRefreshButtonAddToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnExpireRefreshButtonAddToFocus
// 0x0001 (0x0001 - 0x0000)
struct PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus) == 0x000001, "Wrong alignment on PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus) == 0x000001, "Wrong size on PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus, Focus) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnExpireRefreshButtonAddToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnGetFailedRetryButtonAddToFocus
// 0x0001 (0x0001 - 0x0000)
struct PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus) == 0x000001, "Wrong alignment on PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus) == 0x000001, "Wrong size on PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus, Focus) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnGetFailedRetryButtonAddToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnInvalidRefreshButtonAddToFocus
// 0x0001 (0x0001 - 0x0000)
struct PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus) == 0x000001, "Wrong alignment on PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus) == 0x000001, "Wrong size on PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus, Focus) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnInvalidRefreshButtonAddToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnNotSupportRetryButtonAddToFocus
// 0x0001 (0x0001 - 0x0000)
struct PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus) == 0x000001, "Wrong alignment on PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus) == 0x000001, "Wrong size on PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus, Focus) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnNotSupportRetryButtonAddToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnRefreshButtonAddedToFocus
// 0x0010 (0x0010 - 0x0000)
struct PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus final
{
public:
	class UPS5ButtonImageAndText*                 Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Focus;                                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus) == 0x000008, "Wrong alignment on PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus) == 0x000010, "Wrong size on PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus, Button) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus::Button' has a wrong offset!");
static_assert(offsetof(PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus, Focus) == 0x000008, "Member 'PSdkPsQrCodeWidget_OnRefreshButtonAddedToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSdkPsQrCodeWidget.OnScanSuccessfulCancelButtonAddToFocus
// 0x0001 (0x0001 - 0x0000)
struct PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus final
{
public:
	bool                                          Focus;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus) == 0x000001, "Wrong alignment on PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus");
static_assert(sizeof(PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus) == 0x000001, "Wrong size on PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus");
static_assert(offsetof(PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus, Focus) == 0x000000, "Member 'PSdkPsQrCodeWidget_OnScanSuccessfulCancelButtonAddToFocus::Focus' has a wrong offset!");

// Function PaperSDKCross.PSDKUIToolTip.MoveWidget
// 0x0001 (0x0001 - 0x0000)
struct PSDKUIToolTip_MoveWidget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSDKUIToolTip_MoveWidget) == 0x000001, "Wrong alignment on PSDKUIToolTip_MoveWidget");
static_assert(sizeof(PSDKUIToolTip_MoveWidget) == 0x000001, "Wrong size on PSDKUIToolTip_MoveWidget");
static_assert(offsetof(PSDKUIToolTip_MoveWidget, ReturnValue) == 0x000000, "Member 'PSDKUIToolTip_MoveWidget::ReturnValue' has a wrong offset!");

// Function PaperSDKCross.PSLoginUIBrowser.OnCloseButton
// 0x0008 (0x0008 - 0x0000)
struct PSLoginUIBrowser_OnCloseButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSLoginUIBrowser_OnCloseButton) == 0x000008, "Wrong alignment on PSLoginUIBrowser_OnCloseButton");
static_assert(sizeof(PSLoginUIBrowser_OnCloseButton) == 0x000008, "Wrong size on PSLoginUIBrowser_OnCloseButton");
static_assert(offsetof(PSLoginUIBrowser_OnCloseButton, Button) == 0x000000, "Member 'PSLoginUIBrowser_OnCloseButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSLoginUIHyperlinkDecorator.ClickFun
// 0x0050 (0x0050 - 0x0000)
struct PSLoginUIHyperlinkDecorator_ClickFun final
{
public:
	TMap<class FString, class FString>            MetaData;                                          // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSLoginUIHyperlinkDecorator_ClickFun) == 0x000008, "Wrong alignment on PSLoginUIHyperlinkDecorator_ClickFun");
static_assert(sizeof(PSLoginUIHyperlinkDecorator_ClickFun) == 0x000050, "Wrong size on PSLoginUIHyperlinkDecorator_ClickFun");
static_assert(offsetof(PSLoginUIHyperlinkDecorator_ClickFun, MetaData) == 0x000000, "Member 'PSLoginUIHyperlinkDecorator_ClickFun::MetaData' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.OnBackButtonClicked
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasForgetPassWordUI_OnBackButtonClicked final
{
public:
	bool                                          bIsAuto;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasForgetPassWordUI_OnBackButtonClicked) == 0x000001, "Wrong alignment on PSOverseasForgetPassWordUI_OnBackButtonClicked");
static_assert(sizeof(PSOverseasForgetPassWordUI_OnBackButtonClicked) == 0x000001, "Wrong size on PSOverseasForgetPassWordUI_OnBackButtonClicked");
static_assert(offsetof(PSOverseasForgetPassWordUI_OnBackButtonClicked, bIsAuto) == 0x000000, "Member 'PSOverseasForgetPassWordUI_OnBackButtonClicked::bIsAuto' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputAccountCommit");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputAccountCommit");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSOverseasForgetPassWordUI_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputCodeChanged");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputCodeChanged");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputCodeCommit");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputCodeCommit");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PSOverseasForgetPassWordUI_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputPassword2Changed
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed) == 0x000010, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputPassword2Changed::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputPassword2Commit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit) == 0x000018, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit, Type) == 0x000010, "Member 'PSOverseasForgetPassWordUI_TextBoxInputPassword2Commit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputPasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged) == 0x000010, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputPasswordChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasForgetPassWordUI.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit");
static_assert(sizeof(PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSOverseasForgetPassWordUI_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIBindMail.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasLoginUIBindMail_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIBindMail_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PSOverseasLoginUIBindMail_TextBoxInputCodeChanged");
static_assert(sizeof(PSOverseasLoginUIBindMail_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PSOverseasLoginUIBindMail_TextBoxInputCodeChanged");
static_assert(offsetof(PSOverseasLoginUIBindMail_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PSOverseasLoginUIBindMail_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIBindMail.TextBoxInputMailChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasLoginUIBindMail_TextBoxInputMailChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIBindMail_TextBoxInputMailChanged) == 0x000008, "Wrong alignment on PSOverseasLoginUIBindMail_TextBoxInputMailChanged");
static_assert(sizeof(PSOverseasLoginUIBindMail_TextBoxInputMailChanged) == 0x000010, "Wrong size on PSOverseasLoginUIBindMail_TextBoxInputMailChanged");
static_assert(offsetof(PSOverseasLoginUIBindMail_TextBoxInputMailChanged, Text) == 0x000000, "Member 'PSOverseasLoginUIBindMail_TextBoxInputMailChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIFast.OnDeleteItemCallback
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasLoginUIFast_OnDeleteItemCallback final
{
public:
	class FString                                 Nid;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIFast_OnDeleteItemCallback) == 0x000008, "Wrong alignment on PSOverseasLoginUIFast_OnDeleteItemCallback");
static_assert(sizeof(PSOverseasLoginUIFast_OnDeleteItemCallback) == 0x000010, "Wrong size on PSOverseasLoginUIFast_OnDeleteItemCallback");
static_assert(offsetof(PSOverseasLoginUIFast_OnDeleteItemCallback, Nid) == 0x000000, "Member 'PSOverseasLoginUIFast_OnDeleteItemCallback::Nid' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIFast.OnSelectItemCallback
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasLoginUIFast_OnSelectItemCallback final
{
public:
	class FString                                 Nid;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIFast_OnSelectItemCallback) == 0x000008, "Wrong alignment on PSOverseasLoginUIFast_OnSelectItemCallback");
static_assert(sizeof(PSOverseasLoginUIFast_OnSelectItemCallback) == 0x000010, "Wrong size on PSOverseasLoginUIFast_OnSelectItemCallback");
static_assert(offsetof(PSOverseasLoginUIFast_OnSelectItemCallback, Nid) == 0x000000, "Member 'PSOverseasLoginUIFast_OnSelectItemCallback::Nid' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.OnAdjustRichText
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasLoginUIMain_OnAdjustRichText final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIMain_OnAdjustRichText) == 0x000001, "Wrong alignment on PSOverseasLoginUIMain_OnAdjustRichText");
static_assert(sizeof(PSOverseasLoginUIMain_OnAdjustRichText) == 0x000001, "Wrong size on PSOverseasLoginUIMain_OnAdjustRichText");
static_assert(offsetof(PSOverseasLoginUIMain_OnAdjustRichText, ReturnValue) == 0x000000, "Member 'PSOverseasLoginUIMain_OnAdjustRichText::ReturnValue' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasLoginUIMain_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIMain_OnCheckedButton) == 0x000001, "Wrong alignment on PSOverseasLoginUIMain_OnCheckedButton");
static_assert(sizeof(PSOverseasLoginUIMain_OnCheckedButton) == 0x000001, "Wrong size on PSOverseasLoginUIMain_OnCheckedButton");
static_assert(offsetof(PSOverseasLoginUIMain_OnCheckedButton, checked) == 0x000000, "Member 'PSOverseasLoginUIMain_OnCheckedButton::checked' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasLoginUIMain_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIMain_OnDelegate) == 0x000001, "Wrong alignment on PSOverseasLoginUIMain_OnDelegate");
static_assert(sizeof(PSOverseasLoginUIMain_OnDelegate) == 0x000001, "Wrong size on PSOverseasLoginUIMain_OnDelegate");
static_assert(offsetof(PSOverseasLoginUIMain_OnDelegate, bRes) == 0x000000, "Member 'PSOverseasLoginUIMain_OnDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.OnQrDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasLoginUIMain_OnQrDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIMain_OnQrDelegate) == 0x000001, "Wrong alignment on PSOverseasLoginUIMain_OnQrDelegate");
static_assert(sizeof(PSOverseasLoginUIMain_OnQrDelegate) == 0x000001, "Wrong size on PSOverseasLoginUIMain_OnQrDelegate");
static_assert(offsetof(PSOverseasLoginUIMain_OnQrDelegate, bRes) == 0x000000, "Member 'PSOverseasLoginUIMain_OnQrDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.OnThirdDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasLoginUIMain_OnThirdDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasLoginUIMain_OnThirdDelegate) == 0x000001, "Wrong alignment on PSOverseasLoginUIMain_OnThirdDelegate");
static_assert(sizeof(PSOverseasLoginUIMain_OnThirdDelegate) == 0x000001, "Wrong size on PSOverseasLoginUIMain_OnThirdDelegate");
static_assert(offsetof(PSOverseasLoginUIMain_OnThirdDelegate, bRes) == 0x000000, "Member 'PSOverseasLoginUIMain_OnThirdDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.OnThirdLoginButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasLoginUIMain_OnThirdLoginButton final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ClickedByUser;                                     // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasLoginUIMain_OnThirdLoginButton) == 0x000004, "Wrong alignment on PSOverseasLoginUIMain_OnThirdLoginButton");
static_assert(sizeof(PSOverseasLoginUIMain_OnThirdLoginButton) == 0x000008, "Wrong size on PSOverseasLoginUIMain_OnThirdLoginButton");
static_assert(offsetof(PSOverseasLoginUIMain_OnThirdLoginButton, Index_0) == 0x000000, "Member 'PSOverseasLoginUIMain_OnThirdLoginButton::Index_0' has a wrong offset!");
static_assert(offsetof(PSOverseasLoginUIMain_OnThirdLoginButton, ClickedByUser) == 0x000004, "Member 'PSOverseasLoginUIMain_OnThirdLoginButton::ClickedByUser' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasLoginUIMain_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasLoginUIMain_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSOverseasLoginUIMain_TextBoxInputAccountCommit");
static_assert(sizeof(PSOverseasLoginUIMain_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSOverseasLoginUIMain_TextBoxInputAccountCommit");
static_assert(offsetof(PSOverseasLoginUIMain_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSOverseasLoginUIMain_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasLoginUIMain_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSOverseasLoginUIMain_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasLoginUIMain.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasLoginUIMain_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasLoginUIMain_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSOverseasLoginUIMain_TextBoxInputPasswordCommit");
static_assert(sizeof(PSOverseasLoginUIMain_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSOverseasLoginUIMain_TextBoxInputPasswordCommit");
static_assert(offsetof(PSOverseasLoginUIMain_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSOverseasLoginUIMain_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasLoginUIMain_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSOverseasLoginUIMain_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasQRLoginUI.OnCommonErrorPageRefreshButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton) == 0x000008, "Wrong alignment on PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton");
static_assert(sizeof(PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton) == 0x000008, "Wrong size on PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton");
static_assert(offsetof(PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton, Button) == 0x000000, "Member 'PSOverseasQRLoginUI_OnCommonErrorPageRefreshButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSOverseasQRLoginUI.OnExpirePageRefreshButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasQRLoginUI_OnExpirePageRefreshButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasQRLoginUI_OnExpirePageRefreshButton) == 0x000008, "Wrong alignment on PSOverseasQRLoginUI_OnExpirePageRefreshButton");
static_assert(sizeof(PSOverseasQRLoginUI_OnExpirePageRefreshButton) == 0x000008, "Wrong size on PSOverseasQRLoginUI_OnExpirePageRefreshButton");
static_assert(offsetof(PSOverseasQRLoginUI_OnExpirePageRefreshButton, Button) == 0x000000, "Member 'PSOverseasQRLoginUI_OnExpirePageRefreshButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSOverseasQRLoginUI.OnGetFailedPageRetryButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasQRLoginUI_OnGetFailedPageRetryButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasQRLoginUI_OnGetFailedPageRetryButton) == 0x000008, "Wrong alignment on PSOverseasQRLoginUI_OnGetFailedPageRetryButton");
static_assert(sizeof(PSOverseasQRLoginUI_OnGetFailedPageRetryButton) == 0x000008, "Wrong size on PSOverseasQRLoginUI_OnGetFailedPageRetryButton");
static_assert(offsetof(PSOverseasQRLoginUI_OnGetFailedPageRetryButton, Button) == 0x000000, "Member 'PSOverseasQRLoginUI_OnGetFailedPageRetryButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSOverseasQRLoginUI.OnInvalidPageRefreshButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasQRLoginUI_OnInvalidPageRefreshButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasQRLoginUI_OnInvalidPageRefreshButton) == 0x000008, "Wrong alignment on PSOverseasQRLoginUI_OnInvalidPageRefreshButton");
static_assert(sizeof(PSOverseasQRLoginUI_OnInvalidPageRefreshButton) == 0x000008, "Wrong size on PSOverseasQRLoginUI_OnInvalidPageRefreshButton");
static_assert(offsetof(PSOverseasQRLoginUI_OnInvalidPageRefreshButton, Button) == 0x000000, "Member 'PSOverseasQRLoginUI_OnInvalidPageRefreshButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSOverseasQRLoginUI.OnNotSupportPageRetryButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasQRLoginUI_OnNotSupportPageRetryButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasQRLoginUI_OnNotSupportPageRetryButton) == 0x000008, "Wrong alignment on PSOverseasQRLoginUI_OnNotSupportPageRetryButton");
static_assert(sizeof(PSOverseasQRLoginUI_OnNotSupportPageRetryButton) == 0x000008, "Wrong size on PSOverseasQRLoginUI_OnNotSupportPageRetryButton");
static_assert(offsetof(PSOverseasQRLoginUI_OnNotSupportPageRetryButton, Button) == 0x000000, "Member 'PSOverseasQRLoginUI_OnNotSupportPageRetryButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSOverseasQRLoginUI.OnScanSuccessfulPageCancelButton
// 0x0008 (0x0008 - 0x0000)
struct PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton final
{
public:
	class UButton*                                Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton) == 0x000008, "Wrong alignment on PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton");
static_assert(sizeof(PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton) == 0x000008, "Wrong size on PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton");
static_assert(offsetof(PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton, Button) == 0x000000, "Member 'PSOverseasQRLoginUI_OnScanSuccessfulPageCancelButton::Button' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasRegisterAccountKrUI_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_OnDelegate) == 0x000001, "Wrong alignment on PSOverseasRegisterAccountKrUI_OnDelegate");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_OnDelegate) == 0x000001, "Wrong size on PSOverseasRegisterAccountKrUI_OnDelegate");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_OnDelegate, bRes) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_OnDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputPassword2Changed
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed) == 0x000010, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Changed::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputPassword2Commit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit) == 0x000018, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputPassword2Commit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputPasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged) == 0x000010, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputPasswordChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountKrUI.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit");
static_assert(sizeof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountKrUI_TextBoxInputPasswordCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.OnAdjustRichText
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasRegisterAccountUI_OnAdjustRichText final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountUI_OnAdjustRichText) == 0x000001, "Wrong alignment on PSOverseasRegisterAccountUI_OnAdjustRichText");
static_assert(sizeof(PSOverseasRegisterAccountUI_OnAdjustRichText) == 0x000001, "Wrong size on PSOverseasRegisterAccountUI_OnAdjustRichText");
static_assert(offsetof(PSOverseasRegisterAccountUI_OnAdjustRichText, ReturnValue) == 0x000000, "Member 'PSOverseasRegisterAccountUI_OnAdjustRichText::ReturnValue' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.OnCheckedButton
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasRegisterAccountUI_OnCheckedButton final
{
public:
	bool                                          checked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountUI_OnCheckedButton) == 0x000001, "Wrong alignment on PSOverseasRegisterAccountUI_OnCheckedButton");
static_assert(sizeof(PSOverseasRegisterAccountUI_OnCheckedButton) == 0x000001, "Wrong size on PSOverseasRegisterAccountUI_OnCheckedButton");
static_assert(offsetof(PSOverseasRegisterAccountUI_OnCheckedButton, checked) == 0x000000, "Member 'PSOverseasRegisterAccountUI_OnCheckedButton::checked' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.OnDelegate
// 0x0001 (0x0001 - 0x0000)
struct PSOverseasRegisterAccountUI_OnDelegate final
{
public:
	bool                                          bRes;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountUI_OnDelegate) == 0x000001, "Wrong alignment on PSOverseasRegisterAccountUI_OnDelegate");
static_assert(sizeof(PSOverseasRegisterAccountUI_OnDelegate) == 0x000001, "Wrong size on PSOverseasRegisterAccountUI_OnDelegate");
static_assert(offsetof(PSOverseasRegisterAccountUI_OnDelegate, bRes) == 0x000000, "Member 'PSOverseasRegisterAccountUI_OnDelegate::bRes' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputAccountCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputAccountCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputAccountCommit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputAccountCommit");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputAccountCommit) == 0x000018, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputAccountCommit");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputAccountCommit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputAccountCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputAccountCommit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountUI_TextBoxInputAccountCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputCodeChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputCodeChanged) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputCodeChanged");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputCodeChanged) == 0x000010, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputCodeChanged");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputCodeChanged, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputCodeChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputCodeCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputCodeCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputCodeCommit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputCodeCommit");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputCodeCommit) == 0x000018, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputCodeCommit");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputCodeCommit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputCodeCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputCodeCommit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountUI_TextBoxInputCodeCommit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputPassword2Changed
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed) == 0x000010, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputPassword2Changed::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputPassword2Commit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit) == 0x000018, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountUI_TextBoxInputPassword2Commit::Type' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputPasswordChanged
// 0x0010 (0x0010 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged) == 0x000010, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputPasswordChanged::Text' has a wrong offset!");

// Function PaperSDKCross.PSOverseasRegisterAccountUI.TextBoxInputPasswordCommit
// 0x0018 (0x0018 - 0x0000)
struct PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextCommit                                   Type;                                              // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit) == 0x000008, "Wrong alignment on PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit");
static_assert(sizeof(PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit) == 0x000018, "Wrong size on PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit, Text) == 0x000000, "Member 'PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit::Text' has a wrong offset!");
static_assert(offsetof(PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit, Type) == 0x000010, "Member 'PSOverseasRegisterAccountUI_TextBoxInputPasswordCommit::Type' has a wrong offset!");

}

